{"ast":null,"code":"'use strict';\n\nvar retrieveBSON = require('./utils').retrieveBSON;\nvar BSON = retrieveBSON();\nvar Long = BSON.Long;\nconst Buffer = require('safe-buffer').Buffer;\n\n// Incrementing request id\nvar _requestId = 0;\n\n// Wire command operation ids\nvar opcodes = require('../wireprotocol/shared').opcodes;\n\n// Query flags\nvar OPTS_TAILABLE_CURSOR = 2;\nvar OPTS_SLAVE = 4;\nvar OPTS_OPLOG_REPLAY = 8;\nvar OPTS_NO_CURSOR_TIMEOUT = 16;\nvar OPTS_AWAIT_DATA = 32;\nvar OPTS_EXHAUST = 64;\nvar OPTS_PARTIAL = 128;\n\n// Response flags\nvar CURSOR_NOT_FOUND = 1;\nvar QUERY_FAILURE = 2;\nvar SHARD_CONFIG_STALE = 4;\nvar AWAIT_CAPABLE = 8;\n\n/**************************************************************\n * QUERY\n **************************************************************/\nvar Query = function (bson, ns, query, options) {\n  var self = this;\n  // Basic options needed to be passed in\n  if (ns == null) throw new Error('ns must be specified for query');\n  if (query == null) throw new Error('query must be specified for query');\n\n  // Validate that we are not passing 0x00 in the collection name\n  if (ns.indexOf('\\x00') !== -1) {\n    throw new Error('namespace cannot contain a null character');\n  }\n\n  // Basic options\n  this.bson = bson;\n  this.ns = ns;\n  this.query = query;\n\n  // Additional options\n  this.numberToSkip = options.numberToSkip || 0;\n  this.numberToReturn = options.numberToReturn || 0;\n  this.returnFieldSelector = options.returnFieldSelector || null;\n  this.requestId = Query.getRequestId();\n\n  // special case for pre-3.2 find commands, delete ASAP\n  this.pre32Limit = options.pre32Limit;\n\n  // Serialization option\n  this.serializeFunctions = typeof options.serializeFunctions === 'boolean' ? options.serializeFunctions : false;\n  this.ignoreUndefined = typeof options.ignoreUndefined === 'boolean' ? options.ignoreUndefined : false;\n  this.maxBsonSize = options.maxBsonSize || 1024 * 1024 * 16;\n  this.checkKeys = typeof options.checkKeys === 'boolean' ? options.checkKeys : true;\n  this.batchSize = self.numberToReturn;\n\n  // Flags\n  this.tailable = false;\n  this.slaveOk = typeof options.slaveOk === 'boolean' ? options.slaveOk : false;\n  this.oplogReplay = false;\n  this.noCursorTimeout = false;\n  this.awaitData = false;\n  this.exhaust = false;\n  this.partial = false;\n};\n\n//\n// Assign a new request Id\nQuery.prototype.incRequestId = function () {\n  this.requestId = _requestId++;\n};\n\n//\n// Assign a new request Id\nQuery.nextRequestId = function () {\n  return _requestId + 1;\n};\n\n//\n// Uses a single allocated buffer for the process, avoiding multiple memory allocations\nQuery.prototype.toBin = function () {\n  var self = this;\n  var buffers = [];\n  var projection = null;\n\n  // Set up the flags\n  var flags = 0;\n  if (this.tailable) {\n    flags |= OPTS_TAILABLE_CURSOR;\n  }\n  if (this.slaveOk) {\n    flags |= OPTS_SLAVE;\n  }\n  if (this.oplogReplay) {\n    flags |= OPTS_OPLOG_REPLAY;\n  }\n  if (this.noCursorTimeout) {\n    flags |= OPTS_NO_CURSOR_TIMEOUT;\n  }\n  if (this.awaitData) {\n    flags |= OPTS_AWAIT_DATA;\n  }\n  if (this.exhaust) {\n    flags |= OPTS_EXHAUST;\n  }\n  if (this.partial) {\n    flags |= OPTS_PARTIAL;\n  }\n\n  // If batchSize is different to self.numberToReturn\n  if (self.batchSize !== self.numberToReturn) self.numberToReturn = self.batchSize;\n\n  // Allocate write protocol header buffer\n  var header = Buffer.alloc(4 * 4 +\n  // Header\n  4 +\n  // Flags\n  Buffer.byteLength(self.ns) + 1 +\n  // namespace\n  4 +\n  // numberToSkip\n  4 // numberToReturn\n  );\n\n  // Add header to buffers\n  buffers.push(header);\n\n  // Serialize the query\n  var query = self.bson.serialize(this.query, {\n    checkKeys: this.checkKeys,\n    serializeFunctions: this.serializeFunctions,\n    ignoreUndefined: this.ignoreUndefined\n  });\n\n  // Add query document\n  buffers.push(query);\n  if (self.returnFieldSelector && Object.keys(self.returnFieldSelector).length > 0) {\n    // Serialize the projection document\n    projection = self.bson.serialize(this.returnFieldSelector, {\n      checkKeys: this.checkKeys,\n      serializeFunctions: this.serializeFunctions,\n      ignoreUndefined: this.ignoreUndefined\n    });\n    // Add projection document\n    buffers.push(projection);\n  }\n\n  // Total message size\n  var totalLength = header.length + query.length + (projection ? projection.length : 0);\n\n  // Set up the index\n  var index = 4;\n\n  // Write total document length\n  header[3] = totalLength >> 24 & 0xff;\n  header[2] = totalLength >> 16 & 0xff;\n  header[1] = totalLength >> 8 & 0xff;\n  header[0] = totalLength & 0xff;\n\n  // Write header information requestId\n  header[index + 3] = this.requestId >> 24 & 0xff;\n  header[index + 2] = this.requestId >> 16 & 0xff;\n  header[index + 1] = this.requestId >> 8 & 0xff;\n  header[index] = this.requestId & 0xff;\n  index = index + 4;\n\n  // Write header information responseTo\n  header[index + 3] = 0 >> 24 & 0xff;\n  header[index + 2] = 0 >> 16 & 0xff;\n  header[index + 1] = 0 >> 8 & 0xff;\n  header[index] = 0 & 0xff;\n  index = index + 4;\n\n  // Write header information OP_QUERY\n  header[index + 3] = opcodes.OP_QUERY >> 24 & 0xff;\n  header[index + 2] = opcodes.OP_QUERY >> 16 & 0xff;\n  header[index + 1] = opcodes.OP_QUERY >> 8 & 0xff;\n  header[index] = opcodes.OP_QUERY & 0xff;\n  index = index + 4;\n\n  // Write header information flags\n  header[index + 3] = flags >> 24 & 0xff;\n  header[index + 2] = flags >> 16 & 0xff;\n  header[index + 1] = flags >> 8 & 0xff;\n  header[index] = flags & 0xff;\n  index = index + 4;\n\n  // Write collection name\n  index = index + header.write(this.ns, index, 'utf8') + 1;\n  header[index - 1] = 0;\n\n  // Write header information flags numberToSkip\n  header[index + 3] = this.numberToSkip >> 24 & 0xff;\n  header[index + 2] = this.numberToSkip >> 16 & 0xff;\n  header[index + 1] = this.numberToSkip >> 8 & 0xff;\n  header[index] = this.numberToSkip & 0xff;\n  index = index + 4;\n\n  // Write header information flags numberToReturn\n  header[index + 3] = this.numberToReturn >> 24 & 0xff;\n  header[index + 2] = this.numberToReturn >> 16 & 0xff;\n  header[index + 1] = this.numberToReturn >> 8 & 0xff;\n  header[index] = this.numberToReturn & 0xff;\n  index = index + 4;\n\n  // Return the buffers\n  return buffers;\n};\nQuery.getRequestId = function () {\n  return ++_requestId;\n};\n\n/**************************************************************\n * GETMORE\n **************************************************************/\nvar GetMore = function (bson, ns, cursorId, opts) {\n  opts = opts || {};\n  this.numberToReturn = opts.numberToReturn || 0;\n  this.requestId = _requestId++;\n  this.bson = bson;\n  this.ns = ns;\n  this.cursorId = cursorId;\n};\n\n//\n// Uses a single allocated buffer for the process, avoiding multiple memory allocations\nGetMore.prototype.toBin = function () {\n  var length = 4 + Buffer.byteLength(this.ns) + 1 + 4 + 8 + 4 * 4;\n  // Create command buffer\n  var index = 0;\n  // Allocate buffer\n  var _buffer = Buffer.alloc(length);\n\n  // Write header information\n  // index = write32bit(index, _buffer, length);\n  _buffer[index + 3] = length >> 24 & 0xff;\n  _buffer[index + 2] = length >> 16 & 0xff;\n  _buffer[index + 1] = length >> 8 & 0xff;\n  _buffer[index] = length & 0xff;\n  index = index + 4;\n\n  // index = write32bit(index, _buffer, requestId);\n  _buffer[index + 3] = this.requestId >> 24 & 0xff;\n  _buffer[index + 2] = this.requestId >> 16 & 0xff;\n  _buffer[index + 1] = this.requestId >> 8 & 0xff;\n  _buffer[index] = this.requestId & 0xff;\n  index = index + 4;\n\n  // index = write32bit(index, _buffer, 0);\n  _buffer[index + 3] = 0 >> 24 & 0xff;\n  _buffer[index + 2] = 0 >> 16 & 0xff;\n  _buffer[index + 1] = 0 >> 8 & 0xff;\n  _buffer[index] = 0 & 0xff;\n  index = index + 4;\n\n  // index = write32bit(index, _buffer, OP_GETMORE);\n  _buffer[index + 3] = opcodes.OP_GETMORE >> 24 & 0xff;\n  _buffer[index + 2] = opcodes.OP_GETMORE >> 16 & 0xff;\n  _buffer[index + 1] = opcodes.OP_GETMORE >> 8 & 0xff;\n  _buffer[index] = opcodes.OP_GETMORE & 0xff;\n  index = index + 4;\n\n  // index = write32bit(index, _buffer, 0);\n  _buffer[index + 3] = 0 >> 24 & 0xff;\n  _buffer[index + 2] = 0 >> 16 & 0xff;\n  _buffer[index + 1] = 0 >> 8 & 0xff;\n  _buffer[index] = 0 & 0xff;\n  index = index + 4;\n\n  // Write collection name\n  index = index + _buffer.write(this.ns, index, 'utf8') + 1;\n  _buffer[index - 1] = 0;\n\n  // Write batch size\n  // index = write32bit(index, _buffer, numberToReturn);\n  _buffer[index + 3] = this.numberToReturn >> 24 & 0xff;\n  _buffer[index + 2] = this.numberToReturn >> 16 & 0xff;\n  _buffer[index + 1] = this.numberToReturn >> 8 & 0xff;\n  _buffer[index] = this.numberToReturn & 0xff;\n  index = index + 4;\n\n  // Write cursor id\n  // index = write32bit(index, _buffer, cursorId.getLowBits());\n  _buffer[index + 3] = this.cursorId.getLowBits() >> 24 & 0xff;\n  _buffer[index + 2] = this.cursorId.getLowBits() >> 16 & 0xff;\n  _buffer[index + 1] = this.cursorId.getLowBits() >> 8 & 0xff;\n  _buffer[index] = this.cursorId.getLowBits() & 0xff;\n  index = index + 4;\n\n  // index = write32bit(index, _buffer, cursorId.getHighBits());\n  _buffer[index + 3] = this.cursorId.getHighBits() >> 24 & 0xff;\n  _buffer[index + 2] = this.cursorId.getHighBits() >> 16 & 0xff;\n  _buffer[index + 1] = this.cursorId.getHighBits() >> 8 & 0xff;\n  _buffer[index] = this.cursorId.getHighBits() & 0xff;\n  index = index + 4;\n\n  // Return buffer\n  return _buffer;\n};\n\n/**************************************************************\n * KILLCURSOR\n **************************************************************/\nvar KillCursor = function (bson, ns, cursorIds) {\n  this.ns = ns;\n  this.requestId = _requestId++;\n  this.cursorIds = cursorIds;\n};\n\n//\n// Uses a single allocated buffer for the process, avoiding multiple memory allocations\nKillCursor.prototype.toBin = function () {\n  var length = 4 + 4 + 4 * 4 + this.cursorIds.length * 8;\n\n  // Create command buffer\n  var index = 0;\n  var _buffer = Buffer.alloc(length);\n\n  // Write header information\n  // index = write32bit(index, _buffer, length);\n  _buffer[index + 3] = length >> 24 & 0xff;\n  _buffer[index + 2] = length >> 16 & 0xff;\n  _buffer[index + 1] = length >> 8 & 0xff;\n  _buffer[index] = length & 0xff;\n  index = index + 4;\n\n  // index = write32bit(index, _buffer, requestId);\n  _buffer[index + 3] = this.requestId >> 24 & 0xff;\n  _buffer[index + 2] = this.requestId >> 16 & 0xff;\n  _buffer[index + 1] = this.requestId >> 8 & 0xff;\n  _buffer[index] = this.requestId & 0xff;\n  index = index + 4;\n\n  // index = write32bit(index, _buffer, 0);\n  _buffer[index + 3] = 0 >> 24 & 0xff;\n  _buffer[index + 2] = 0 >> 16 & 0xff;\n  _buffer[index + 1] = 0 >> 8 & 0xff;\n  _buffer[index] = 0 & 0xff;\n  index = index + 4;\n\n  // index = write32bit(index, _buffer, OP_KILL_CURSORS);\n  _buffer[index + 3] = opcodes.OP_KILL_CURSORS >> 24 & 0xff;\n  _buffer[index + 2] = opcodes.OP_KILL_CURSORS >> 16 & 0xff;\n  _buffer[index + 1] = opcodes.OP_KILL_CURSORS >> 8 & 0xff;\n  _buffer[index] = opcodes.OP_KILL_CURSORS & 0xff;\n  index = index + 4;\n\n  // index = write32bit(index, _buffer, 0);\n  _buffer[index + 3] = 0 >> 24 & 0xff;\n  _buffer[index + 2] = 0 >> 16 & 0xff;\n  _buffer[index + 1] = 0 >> 8 & 0xff;\n  _buffer[index] = 0 & 0xff;\n  index = index + 4;\n\n  // Write batch size\n  // index = write32bit(index, _buffer, this.cursorIds.length);\n  _buffer[index + 3] = this.cursorIds.length >> 24 & 0xff;\n  _buffer[index + 2] = this.cursorIds.length >> 16 & 0xff;\n  _buffer[index + 1] = this.cursorIds.length >> 8 & 0xff;\n  _buffer[index] = this.cursorIds.length & 0xff;\n  index = index + 4;\n\n  // Write all the cursor ids into the array\n  for (var i = 0; i < this.cursorIds.length; i++) {\n    // Write cursor id\n    // index = write32bit(index, _buffer, cursorIds[i].getLowBits());\n    _buffer[index + 3] = this.cursorIds[i].getLowBits() >> 24 & 0xff;\n    _buffer[index + 2] = this.cursorIds[i].getLowBits() >> 16 & 0xff;\n    _buffer[index + 1] = this.cursorIds[i].getLowBits() >> 8 & 0xff;\n    _buffer[index] = this.cursorIds[i].getLowBits() & 0xff;\n    index = index + 4;\n\n    // index = write32bit(index, _buffer, cursorIds[i].getHighBits());\n    _buffer[index + 3] = this.cursorIds[i].getHighBits() >> 24 & 0xff;\n    _buffer[index + 2] = this.cursorIds[i].getHighBits() >> 16 & 0xff;\n    _buffer[index + 1] = this.cursorIds[i].getHighBits() >> 8 & 0xff;\n    _buffer[index] = this.cursorIds[i].getHighBits() & 0xff;\n    index = index + 4;\n  }\n\n  // Return buffer\n  return _buffer;\n};\nvar Response = function (bson, message, msgHeader, msgBody, opts) {\n  opts = opts || {\n    promoteLongs: true,\n    promoteValues: true,\n    promoteBuffers: false,\n    bsonRegExp: false\n  };\n  this.parsed = false;\n  this.raw = message;\n  this.data = msgBody;\n  this.bson = bson;\n  this.opts = opts;\n\n  // Read the message header\n  this.length = msgHeader.length;\n  this.requestId = msgHeader.requestId;\n  this.responseTo = msgHeader.responseTo;\n  this.opCode = msgHeader.opCode;\n  this.fromCompressed = msgHeader.fromCompressed;\n\n  // Read the message body\n  this.responseFlags = msgBody.readInt32LE(0);\n  this.cursorId = new Long(msgBody.readInt32LE(4), msgBody.readInt32LE(8));\n  this.startingFrom = msgBody.readInt32LE(12);\n  this.numberReturned = msgBody.readInt32LE(16);\n\n  // Preallocate document array\n  this.documents = new Array(this.numberReturned);\n\n  // Flag values\n  this.cursorNotFound = (this.responseFlags & CURSOR_NOT_FOUND) !== 0;\n  this.queryFailure = (this.responseFlags & QUERY_FAILURE) !== 0;\n  this.shardConfigStale = (this.responseFlags & SHARD_CONFIG_STALE) !== 0;\n  this.awaitCapable = (this.responseFlags & AWAIT_CAPABLE) !== 0;\n  this.promoteLongs = typeof opts.promoteLongs === 'boolean' ? opts.promoteLongs : true;\n  this.promoteValues = typeof opts.promoteValues === 'boolean' ? opts.promoteValues : true;\n  this.promoteBuffers = typeof opts.promoteBuffers === 'boolean' ? opts.promoteBuffers : false;\n  this.bsonRegExp = typeof opts.bsonRegExp === 'boolean' ? opts.bsonRegExp : false;\n};\nResponse.prototype.isParsed = function () {\n  return this.parsed;\n};\nResponse.prototype.parse = function (options) {\n  // Don't parse again if not needed\n  if (this.parsed) return;\n  options = options || {};\n\n  // Allow the return of raw documents instead of parsing\n  var raw = options.raw || false;\n  var documentsReturnedIn = options.documentsReturnedIn || null;\n  var promoteLongs = typeof options.promoteLongs === 'boolean' ? options.promoteLongs : this.opts.promoteLongs;\n  var promoteValues = typeof options.promoteValues === 'boolean' ? options.promoteValues : this.opts.promoteValues;\n  var promoteBuffers = typeof options.promoteBuffers === 'boolean' ? options.promoteBuffers : this.opts.promoteBuffers;\n  var bsonRegExp = typeof options.bsonRegExp === 'boolean' ? options.bsonRegExp : this.opts.bsonRegExp;\n  var bsonSize, _options;\n\n  // Set up the options\n  _options = {\n    promoteLongs: promoteLongs,\n    promoteValues: promoteValues,\n    promoteBuffers: promoteBuffers,\n    bsonRegExp: bsonRegExp\n  };\n\n  // Position within OP_REPLY at which documents start\n  // (See https://docs.mongodb.com/manual/reference/mongodb-wire-protocol/#wire-op-reply)\n  this.index = 20;\n\n  //\n  // Parse Body\n  //\n  for (var i = 0; i < this.numberReturned; i++) {\n    bsonSize = this.data[this.index] | this.data[this.index + 1] << 8 | this.data[this.index + 2] << 16 | this.data[this.index + 3] << 24;\n\n    // If we have raw results specified slice the return document\n    if (raw) {\n      this.documents[i] = this.data.slice(this.index, this.index + bsonSize);\n    } else {\n      this.documents[i] = this.bson.deserialize(this.data.slice(this.index, this.index + bsonSize), _options);\n    }\n\n    // Adjust the index\n    this.index = this.index + bsonSize;\n  }\n  if (this.documents.length === 1 && documentsReturnedIn != null && raw) {\n    const fieldsAsRaw = {};\n    fieldsAsRaw[documentsReturnedIn] = true;\n    _options.fieldsAsRaw = fieldsAsRaw;\n    const doc = this.bson.deserialize(this.documents[0], _options);\n    this.documents = [doc];\n  }\n\n  // Set parsed\n  this.parsed = true;\n};\nmodule.exports = {\n  Query: Query,\n  GetMore: GetMore,\n  Response: Response,\n  KillCursor: KillCursor\n};","map":{"version":3,"names":["retrieveBSON","require","BSON","Long","Buffer","_requestId","opcodes","OPTS_TAILABLE_CURSOR","OPTS_SLAVE","OPTS_OPLOG_REPLAY","OPTS_NO_CURSOR_TIMEOUT","OPTS_AWAIT_DATA","OPTS_EXHAUST","OPTS_PARTIAL","CURSOR_NOT_FOUND","QUERY_FAILURE","SHARD_CONFIG_STALE","AWAIT_CAPABLE","Query","bson","ns","query","options","self","Error","indexOf","numberToSkip","numberToReturn","returnFieldSelector","requestId","getRequestId","pre32Limit","serializeFunctions","ignoreUndefined","maxBsonSize","checkKeys","batchSize","tailable","slaveOk","oplogReplay","noCursorTimeout","awaitData","exhaust","partial","prototype","incRequestId","nextRequestId","toBin","buffers","projection","flags","header","alloc","byteLength","push","serialize","Object","keys","length","totalLength","index","OP_QUERY","write","GetMore","cursorId","opts","_buffer","OP_GETMORE","getLowBits","getHighBits","KillCursor","cursorIds","OP_KILL_CURSORS","i","Response","message","msgHeader","msgBody","promoteLongs","promoteValues","promoteBuffers","bsonRegExp","parsed","raw","data","responseTo","opCode","fromCompressed","responseFlags","readInt32LE","startingFrom","numberReturned","documents","Array","cursorNotFound","queryFailure","shardConfigStale","awaitCapable","isParsed","parse","documentsReturnedIn","bsonSize","_options","slice","deserialize","fieldsAsRaw","doc","module","exports"],"sources":["C:/Users/minix/Documents/GitHub/digital-portfolio-projects/digital-portfolio-projects/node_modules/mongodb/lib/core/connection/commands.js"],"sourcesContent":["'use strict';\n\nvar retrieveBSON = require('./utils').retrieveBSON;\nvar BSON = retrieveBSON();\nvar Long = BSON.Long;\nconst Buffer = require('safe-buffer').Buffer;\n\n// Incrementing request id\nvar _requestId = 0;\n\n// Wire command operation ids\nvar opcodes = require('../wireprotocol/shared').opcodes;\n\n// Query flags\nvar OPTS_TAILABLE_CURSOR = 2;\nvar OPTS_SLAVE = 4;\nvar OPTS_OPLOG_REPLAY = 8;\nvar OPTS_NO_CURSOR_TIMEOUT = 16;\nvar OPTS_AWAIT_DATA = 32;\nvar OPTS_EXHAUST = 64;\nvar OPTS_PARTIAL = 128;\n\n// Response flags\nvar CURSOR_NOT_FOUND = 1;\nvar QUERY_FAILURE = 2;\nvar SHARD_CONFIG_STALE = 4;\nvar AWAIT_CAPABLE = 8;\n\n/**************************************************************\n * QUERY\n **************************************************************/\nvar Query = function(bson, ns, query, options) {\n  var self = this;\n  // Basic options needed to be passed in\n  if (ns == null) throw new Error('ns must be specified for query');\n  if (query == null) throw new Error('query must be specified for query');\n\n  // Validate that we are not passing 0x00 in the collection name\n  if (ns.indexOf('\\x00') !== -1) {\n    throw new Error('namespace cannot contain a null character');\n  }\n\n  // Basic options\n  this.bson = bson;\n  this.ns = ns;\n  this.query = query;\n\n  // Additional options\n  this.numberToSkip = options.numberToSkip || 0;\n  this.numberToReturn = options.numberToReturn || 0;\n  this.returnFieldSelector = options.returnFieldSelector || null;\n  this.requestId = Query.getRequestId();\n\n  // special case for pre-3.2 find commands, delete ASAP\n  this.pre32Limit = options.pre32Limit;\n\n  // Serialization option\n  this.serializeFunctions =\n    typeof options.serializeFunctions === 'boolean' ? options.serializeFunctions : false;\n  this.ignoreUndefined =\n    typeof options.ignoreUndefined === 'boolean' ? options.ignoreUndefined : false;\n  this.maxBsonSize = options.maxBsonSize || 1024 * 1024 * 16;\n  this.checkKeys = typeof options.checkKeys === 'boolean' ? options.checkKeys : true;\n  this.batchSize = self.numberToReturn;\n\n  // Flags\n  this.tailable = false;\n  this.slaveOk = typeof options.slaveOk === 'boolean' ? options.slaveOk : false;\n  this.oplogReplay = false;\n  this.noCursorTimeout = false;\n  this.awaitData = false;\n  this.exhaust = false;\n  this.partial = false;\n};\n\n//\n// Assign a new request Id\nQuery.prototype.incRequestId = function() {\n  this.requestId = _requestId++;\n};\n\n//\n// Assign a new request Id\nQuery.nextRequestId = function() {\n  return _requestId + 1;\n};\n\n//\n// Uses a single allocated buffer for the process, avoiding multiple memory allocations\nQuery.prototype.toBin = function() {\n  var self = this;\n  var buffers = [];\n  var projection = null;\n\n  // Set up the flags\n  var flags = 0;\n  if (this.tailable) {\n    flags |= OPTS_TAILABLE_CURSOR;\n  }\n\n  if (this.slaveOk) {\n    flags |= OPTS_SLAVE;\n  }\n\n  if (this.oplogReplay) {\n    flags |= OPTS_OPLOG_REPLAY;\n  }\n\n  if (this.noCursorTimeout) {\n    flags |= OPTS_NO_CURSOR_TIMEOUT;\n  }\n\n  if (this.awaitData) {\n    flags |= OPTS_AWAIT_DATA;\n  }\n\n  if (this.exhaust) {\n    flags |= OPTS_EXHAUST;\n  }\n\n  if (this.partial) {\n    flags |= OPTS_PARTIAL;\n  }\n\n  // If batchSize is different to self.numberToReturn\n  if (self.batchSize !== self.numberToReturn) self.numberToReturn = self.batchSize;\n\n  // Allocate write protocol header buffer\n  var header = Buffer.alloc(\n    4 * 4 + // Header\n    4 + // Flags\n    Buffer.byteLength(self.ns) +\n    1 + // namespace\n    4 + // numberToSkip\n      4 // numberToReturn\n  );\n\n  // Add header to buffers\n  buffers.push(header);\n\n  // Serialize the query\n  var query = self.bson.serialize(this.query, {\n    checkKeys: this.checkKeys,\n    serializeFunctions: this.serializeFunctions,\n    ignoreUndefined: this.ignoreUndefined\n  });\n\n  // Add query document\n  buffers.push(query);\n\n  if (self.returnFieldSelector && Object.keys(self.returnFieldSelector).length > 0) {\n    // Serialize the projection document\n    projection = self.bson.serialize(this.returnFieldSelector, {\n      checkKeys: this.checkKeys,\n      serializeFunctions: this.serializeFunctions,\n      ignoreUndefined: this.ignoreUndefined\n    });\n    // Add projection document\n    buffers.push(projection);\n  }\n\n  // Total message size\n  var totalLength = header.length + query.length + (projection ? projection.length : 0);\n\n  // Set up the index\n  var index = 4;\n\n  // Write total document length\n  header[3] = (totalLength >> 24) & 0xff;\n  header[2] = (totalLength >> 16) & 0xff;\n  header[1] = (totalLength >> 8) & 0xff;\n  header[0] = totalLength & 0xff;\n\n  // Write header information requestId\n  header[index + 3] = (this.requestId >> 24) & 0xff;\n  header[index + 2] = (this.requestId >> 16) & 0xff;\n  header[index + 1] = (this.requestId >> 8) & 0xff;\n  header[index] = this.requestId & 0xff;\n  index = index + 4;\n\n  // Write header information responseTo\n  header[index + 3] = (0 >> 24) & 0xff;\n  header[index + 2] = (0 >> 16) & 0xff;\n  header[index + 1] = (0 >> 8) & 0xff;\n  header[index] = 0 & 0xff;\n  index = index + 4;\n\n  // Write header information OP_QUERY\n  header[index + 3] = (opcodes.OP_QUERY >> 24) & 0xff;\n  header[index + 2] = (opcodes.OP_QUERY >> 16) & 0xff;\n  header[index + 1] = (opcodes.OP_QUERY >> 8) & 0xff;\n  header[index] = opcodes.OP_QUERY & 0xff;\n  index = index + 4;\n\n  // Write header information flags\n  header[index + 3] = (flags >> 24) & 0xff;\n  header[index + 2] = (flags >> 16) & 0xff;\n  header[index + 1] = (flags >> 8) & 0xff;\n  header[index] = flags & 0xff;\n  index = index + 4;\n\n  // Write collection name\n  index = index + header.write(this.ns, index, 'utf8') + 1;\n  header[index - 1] = 0;\n\n  // Write header information flags numberToSkip\n  header[index + 3] = (this.numberToSkip >> 24) & 0xff;\n  header[index + 2] = (this.numberToSkip >> 16) & 0xff;\n  header[index + 1] = (this.numberToSkip >> 8) & 0xff;\n  header[index] = this.numberToSkip & 0xff;\n  index = index + 4;\n\n  // Write header information flags numberToReturn\n  header[index + 3] = (this.numberToReturn >> 24) & 0xff;\n  header[index + 2] = (this.numberToReturn >> 16) & 0xff;\n  header[index + 1] = (this.numberToReturn >> 8) & 0xff;\n  header[index] = this.numberToReturn & 0xff;\n  index = index + 4;\n\n  // Return the buffers\n  return buffers;\n};\n\nQuery.getRequestId = function() {\n  return ++_requestId;\n};\n\n/**************************************************************\n * GETMORE\n **************************************************************/\nvar GetMore = function(bson, ns, cursorId, opts) {\n  opts = opts || {};\n  this.numberToReturn = opts.numberToReturn || 0;\n  this.requestId = _requestId++;\n  this.bson = bson;\n  this.ns = ns;\n  this.cursorId = cursorId;\n};\n\n//\n// Uses a single allocated buffer for the process, avoiding multiple memory allocations\nGetMore.prototype.toBin = function() {\n  var length = 4 + Buffer.byteLength(this.ns) + 1 + 4 + 8 + 4 * 4;\n  // Create command buffer\n  var index = 0;\n  // Allocate buffer\n  var _buffer = Buffer.alloc(length);\n\n  // Write header information\n  // index = write32bit(index, _buffer, length);\n  _buffer[index + 3] = (length >> 24) & 0xff;\n  _buffer[index + 2] = (length >> 16) & 0xff;\n  _buffer[index + 1] = (length >> 8) & 0xff;\n  _buffer[index] = length & 0xff;\n  index = index + 4;\n\n  // index = write32bit(index, _buffer, requestId);\n  _buffer[index + 3] = (this.requestId >> 24) & 0xff;\n  _buffer[index + 2] = (this.requestId >> 16) & 0xff;\n  _buffer[index + 1] = (this.requestId >> 8) & 0xff;\n  _buffer[index] = this.requestId & 0xff;\n  index = index + 4;\n\n  // index = write32bit(index, _buffer, 0);\n  _buffer[index + 3] = (0 >> 24) & 0xff;\n  _buffer[index + 2] = (0 >> 16) & 0xff;\n  _buffer[index + 1] = (0 >> 8) & 0xff;\n  _buffer[index] = 0 & 0xff;\n  index = index + 4;\n\n  // index = write32bit(index, _buffer, OP_GETMORE);\n  _buffer[index + 3] = (opcodes.OP_GETMORE >> 24) & 0xff;\n  _buffer[index + 2] = (opcodes.OP_GETMORE >> 16) & 0xff;\n  _buffer[index + 1] = (opcodes.OP_GETMORE >> 8) & 0xff;\n  _buffer[index] = opcodes.OP_GETMORE & 0xff;\n  index = index + 4;\n\n  // index = write32bit(index, _buffer, 0);\n  _buffer[index + 3] = (0 >> 24) & 0xff;\n  _buffer[index + 2] = (0 >> 16) & 0xff;\n  _buffer[index + 1] = (0 >> 8) & 0xff;\n  _buffer[index] = 0 & 0xff;\n  index = index + 4;\n\n  // Write collection name\n  index = index + _buffer.write(this.ns, index, 'utf8') + 1;\n  _buffer[index - 1] = 0;\n\n  // Write batch size\n  // index = write32bit(index, _buffer, numberToReturn);\n  _buffer[index + 3] = (this.numberToReturn >> 24) & 0xff;\n  _buffer[index + 2] = (this.numberToReturn >> 16) & 0xff;\n  _buffer[index + 1] = (this.numberToReturn >> 8) & 0xff;\n  _buffer[index] = this.numberToReturn & 0xff;\n  index = index + 4;\n\n  // Write cursor id\n  // index = write32bit(index, _buffer, cursorId.getLowBits());\n  _buffer[index + 3] = (this.cursorId.getLowBits() >> 24) & 0xff;\n  _buffer[index + 2] = (this.cursorId.getLowBits() >> 16) & 0xff;\n  _buffer[index + 1] = (this.cursorId.getLowBits() >> 8) & 0xff;\n  _buffer[index] = this.cursorId.getLowBits() & 0xff;\n  index = index + 4;\n\n  // index = write32bit(index, _buffer, cursorId.getHighBits());\n  _buffer[index + 3] = (this.cursorId.getHighBits() >> 24) & 0xff;\n  _buffer[index + 2] = (this.cursorId.getHighBits() >> 16) & 0xff;\n  _buffer[index + 1] = (this.cursorId.getHighBits() >> 8) & 0xff;\n  _buffer[index] = this.cursorId.getHighBits() & 0xff;\n  index = index + 4;\n\n  // Return buffer\n  return _buffer;\n};\n\n/**************************************************************\n * KILLCURSOR\n **************************************************************/\nvar KillCursor = function(bson, ns, cursorIds) {\n  this.ns = ns;\n  this.requestId = _requestId++;\n  this.cursorIds = cursorIds;\n};\n\n//\n// Uses a single allocated buffer for the process, avoiding multiple memory allocations\nKillCursor.prototype.toBin = function() {\n  var length = 4 + 4 + 4 * 4 + this.cursorIds.length * 8;\n\n  // Create command buffer\n  var index = 0;\n  var _buffer = Buffer.alloc(length);\n\n  // Write header information\n  // index = write32bit(index, _buffer, length);\n  _buffer[index + 3] = (length >> 24) & 0xff;\n  _buffer[index + 2] = (length >> 16) & 0xff;\n  _buffer[index + 1] = (length >> 8) & 0xff;\n  _buffer[index] = length & 0xff;\n  index = index + 4;\n\n  // index = write32bit(index, _buffer, requestId);\n  _buffer[index + 3] = (this.requestId >> 24) & 0xff;\n  _buffer[index + 2] = (this.requestId >> 16) & 0xff;\n  _buffer[index + 1] = (this.requestId >> 8) & 0xff;\n  _buffer[index] = this.requestId & 0xff;\n  index = index + 4;\n\n  // index = write32bit(index, _buffer, 0);\n  _buffer[index + 3] = (0 >> 24) & 0xff;\n  _buffer[index + 2] = (0 >> 16) & 0xff;\n  _buffer[index + 1] = (0 >> 8) & 0xff;\n  _buffer[index] = 0 & 0xff;\n  index = index + 4;\n\n  // index = write32bit(index, _buffer, OP_KILL_CURSORS);\n  _buffer[index + 3] = (opcodes.OP_KILL_CURSORS >> 24) & 0xff;\n  _buffer[index + 2] = (opcodes.OP_KILL_CURSORS >> 16) & 0xff;\n  _buffer[index + 1] = (opcodes.OP_KILL_CURSORS >> 8) & 0xff;\n  _buffer[index] = opcodes.OP_KILL_CURSORS & 0xff;\n  index = index + 4;\n\n  // index = write32bit(index, _buffer, 0);\n  _buffer[index + 3] = (0 >> 24) & 0xff;\n  _buffer[index + 2] = (0 >> 16) & 0xff;\n  _buffer[index + 1] = (0 >> 8) & 0xff;\n  _buffer[index] = 0 & 0xff;\n  index = index + 4;\n\n  // Write batch size\n  // index = write32bit(index, _buffer, this.cursorIds.length);\n  _buffer[index + 3] = (this.cursorIds.length >> 24) & 0xff;\n  _buffer[index + 2] = (this.cursorIds.length >> 16) & 0xff;\n  _buffer[index + 1] = (this.cursorIds.length >> 8) & 0xff;\n  _buffer[index] = this.cursorIds.length & 0xff;\n  index = index + 4;\n\n  // Write all the cursor ids into the array\n  for (var i = 0; i < this.cursorIds.length; i++) {\n    // Write cursor id\n    // index = write32bit(index, _buffer, cursorIds[i].getLowBits());\n    _buffer[index + 3] = (this.cursorIds[i].getLowBits() >> 24) & 0xff;\n    _buffer[index + 2] = (this.cursorIds[i].getLowBits() >> 16) & 0xff;\n    _buffer[index + 1] = (this.cursorIds[i].getLowBits() >> 8) & 0xff;\n    _buffer[index] = this.cursorIds[i].getLowBits() & 0xff;\n    index = index + 4;\n\n    // index = write32bit(index, _buffer, cursorIds[i].getHighBits());\n    _buffer[index + 3] = (this.cursorIds[i].getHighBits() >> 24) & 0xff;\n    _buffer[index + 2] = (this.cursorIds[i].getHighBits() >> 16) & 0xff;\n    _buffer[index + 1] = (this.cursorIds[i].getHighBits() >> 8) & 0xff;\n    _buffer[index] = this.cursorIds[i].getHighBits() & 0xff;\n    index = index + 4;\n  }\n\n  // Return buffer\n  return _buffer;\n};\n\nvar Response = function(bson, message, msgHeader, msgBody, opts) {\n  opts = opts || {\n    promoteLongs: true,\n    promoteValues: true,\n    promoteBuffers: false,\n    bsonRegExp: false\n  };\n  this.parsed = false;\n  this.raw = message;\n  this.data = msgBody;\n  this.bson = bson;\n  this.opts = opts;\n\n  // Read the message header\n  this.length = msgHeader.length;\n  this.requestId = msgHeader.requestId;\n  this.responseTo = msgHeader.responseTo;\n  this.opCode = msgHeader.opCode;\n  this.fromCompressed = msgHeader.fromCompressed;\n\n  // Read the message body\n  this.responseFlags = msgBody.readInt32LE(0);\n  this.cursorId = new Long(msgBody.readInt32LE(4), msgBody.readInt32LE(8));\n  this.startingFrom = msgBody.readInt32LE(12);\n  this.numberReturned = msgBody.readInt32LE(16);\n\n  // Preallocate document array\n  this.documents = new Array(this.numberReturned);\n\n  // Flag values\n  this.cursorNotFound = (this.responseFlags & CURSOR_NOT_FOUND) !== 0;\n  this.queryFailure = (this.responseFlags & QUERY_FAILURE) !== 0;\n  this.shardConfigStale = (this.responseFlags & SHARD_CONFIG_STALE) !== 0;\n  this.awaitCapable = (this.responseFlags & AWAIT_CAPABLE) !== 0;\n  this.promoteLongs = typeof opts.promoteLongs === 'boolean' ? opts.promoteLongs : true;\n  this.promoteValues = typeof opts.promoteValues === 'boolean' ? opts.promoteValues : true;\n  this.promoteBuffers = typeof opts.promoteBuffers === 'boolean' ? opts.promoteBuffers : false;\n  this.bsonRegExp = typeof opts.bsonRegExp === 'boolean' ? opts.bsonRegExp : false;\n};\n\nResponse.prototype.isParsed = function() {\n  return this.parsed;\n};\n\nResponse.prototype.parse = function(options) {\n  // Don't parse again if not needed\n  if (this.parsed) return;\n  options = options || {};\n\n  // Allow the return of raw documents instead of parsing\n  var raw = options.raw || false;\n  var documentsReturnedIn = options.documentsReturnedIn || null;\n  var promoteLongs =\n    typeof options.promoteLongs === 'boolean' ? options.promoteLongs : this.opts.promoteLongs;\n  var promoteValues =\n    typeof options.promoteValues === 'boolean' ? options.promoteValues : this.opts.promoteValues;\n  var promoteBuffers =\n    typeof options.promoteBuffers === 'boolean' ? options.promoteBuffers : this.opts.promoteBuffers;\n  var bsonRegExp =\n    typeof options.bsonRegExp === 'boolean' ? options.bsonRegExp : this.opts.bsonRegExp;\n  var bsonSize, _options;\n\n  // Set up the options\n  _options = {\n    promoteLongs: promoteLongs,\n    promoteValues: promoteValues,\n    promoteBuffers: promoteBuffers,\n    bsonRegExp: bsonRegExp\n  };\n\n  // Position within OP_REPLY at which documents start\n  // (See https://docs.mongodb.com/manual/reference/mongodb-wire-protocol/#wire-op-reply)\n  this.index = 20;\n\n  //\n  // Parse Body\n  //\n  for (var i = 0; i < this.numberReturned; i++) {\n    bsonSize =\n      this.data[this.index] |\n      (this.data[this.index + 1] << 8) |\n      (this.data[this.index + 2] << 16) |\n      (this.data[this.index + 3] << 24);\n\n    // If we have raw results specified slice the return document\n    if (raw) {\n      this.documents[i] = this.data.slice(this.index, this.index + bsonSize);\n    } else {\n      this.documents[i] = this.bson.deserialize(\n        this.data.slice(this.index, this.index + bsonSize),\n        _options\n      );\n    }\n\n    // Adjust the index\n    this.index = this.index + bsonSize;\n  }\n\n  if (this.documents.length === 1 && documentsReturnedIn != null && raw) {\n    const fieldsAsRaw = {};\n    fieldsAsRaw[documentsReturnedIn] = true;\n    _options.fieldsAsRaw = fieldsAsRaw;\n\n    const doc = this.bson.deserialize(this.documents[0], _options);\n    this.documents = [doc];\n  }\n\n  // Set parsed\n  this.parsed = true;\n};\n\nmodule.exports = {\n  Query: Query,\n  GetMore: GetMore,\n  Response: Response,\n  KillCursor: KillCursor\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}