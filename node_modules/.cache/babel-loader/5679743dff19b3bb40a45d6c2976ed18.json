{"ast":null,"code":"// Copyright (c) 2008, Fair Oaks Labs, Inc.\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//  * Redistributions of source code must retain the above copyright notice,\n//    this list of conditions and the following disclaimer.\n//\n//  * Redistributions in binary form must reproduce the above copyright notice,\n//    this list of conditions and the following disclaimer in the documentation\n//    and/or other materials provided with the distribution.\n//\n//  * Neither the name of Fair Oaks Labs, Inc. nor the names of its contributors\n//    may be used to endorse or promote products derived from this software\n//    without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n//\n//\n// Modifications to writeIEEE754 to support negative zeroes made by Brian White\n\nvar readIEEE754 = function (buffer, offset, endian, mLen, nBytes) {\n  var e,\n    m,\n    bBE = endian === 'big',\n    eLen = nBytes * 8 - mLen - 1,\n    eMax = (1 << eLen) - 1,\n    eBias = eMax >> 1,\n    nBits = -7,\n    i = bBE ? 0 : nBytes - 1,\n    d = bBE ? 1 : -1,\n    s = buffer[offset + i];\n  i += d;\n  e = s & (1 << -nBits) - 1;\n  s >>= -nBits;\n  nBits += eLen;\n  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8);\n  m = e & (1 << -nBits) - 1;\n  e >>= -nBits;\n  nBits += mLen;\n  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8);\n  if (e === 0) {\n    e = 1 - eBias;\n  } else if (e === eMax) {\n    return m ? NaN : (s ? -1 : 1) * Infinity;\n  } else {\n    m = m + Math.pow(2, mLen);\n    e = e - eBias;\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen);\n};\nvar writeIEEE754 = function (buffer, value, offset, endian, mLen, nBytes) {\n  var e,\n    m,\n    c,\n    bBE = endian === 'big',\n    eLen = nBytes * 8 - mLen - 1,\n    eMax = (1 << eLen) - 1,\n    eBias = eMax >> 1,\n    rt = mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0,\n    i = bBE ? nBytes - 1 : 0,\n    d = bBE ? -1 : 1,\n    s = value < 0 || value === 0 && 1 / value < 0 ? 1 : 0;\n  value = Math.abs(value);\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0;\n    e = eMax;\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2);\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--;\n      c *= 2;\n    }\n    if (e + eBias >= 1) {\n      value += rt / c;\n    } else {\n      value += rt * Math.pow(2, 1 - eBias);\n    }\n    if (value * c >= 2) {\n      e++;\n      c /= 2;\n    }\n    if (e + eBias >= eMax) {\n      m = 0;\n      e = eMax;\n    } else if (e + eBias >= 1) {\n      m = (value * c - 1) * Math.pow(2, mLen);\n      e = e + eBias;\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen);\n      e = 0;\n    }\n  }\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8);\n  e = e << mLen | m;\n  eLen += mLen;\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8);\n  buffer[offset + i - d] |= s * 128;\n};\nexports.readIEEE754 = readIEEE754;\nexports.writeIEEE754 = writeIEEE754;","map":{"version":3,"names":["readIEEE754","buffer","offset","endian","mLen","nBytes","e","m","bBE","eLen","eMax","eBias","nBits","i","d","s","NaN","Infinity","Math","pow","writeIEEE754","value","c","rt","abs","isNaN","floor","log","LN2","exports"],"sources":["C:/Users/minix/Documents/GitHub/digital-portfolio-projects/digital-portfolio-projects/node_modules/bson/lib/bson/float_parser.js"],"sourcesContent":["// Copyright (c) 2008, Fair Oaks Labs, Inc.\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//  * Redistributions of source code must retain the above copyright notice,\n//    this list of conditions and the following disclaimer.\n//\n//  * Redistributions in binary form must reproduce the above copyright notice,\n//    this list of conditions and the following disclaimer in the documentation\n//    and/or other materials provided with the distribution.\n//\n//  * Neither the name of Fair Oaks Labs, Inc. nor the names of its contributors\n//    may be used to endorse or promote products derived from this software\n//    without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n//\n//\n// Modifications to writeIEEE754 to support negative zeroes made by Brian White\n\nvar readIEEE754 = function(buffer, offset, endian, mLen, nBytes) {\n  var e,\n    m,\n    bBE = endian === 'big',\n    eLen = nBytes * 8 - mLen - 1,\n    eMax = (1 << eLen) - 1,\n    eBias = eMax >> 1,\n    nBits = -7,\n    i = bBE ? 0 : nBytes - 1,\n    d = bBE ? 1 : -1,\n    s = buffer[offset + i];\n\n  i += d;\n\n  e = s & ((1 << -nBits) - 1);\n  s >>= -nBits;\n  nBits += eLen;\n  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8);\n\n  m = e & ((1 << -nBits) - 1);\n  e >>= -nBits;\n  nBits += mLen;\n  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8);\n\n  if (e === 0) {\n    e = 1 - eBias;\n  } else if (e === eMax) {\n    return m ? NaN : (s ? -1 : 1) * Infinity;\n  } else {\n    m = m + Math.pow(2, mLen);\n    e = e - eBias;\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen);\n};\n\nvar writeIEEE754 = function(buffer, value, offset, endian, mLen, nBytes) {\n  var e,\n    m,\n    c,\n    bBE = endian === 'big',\n    eLen = nBytes * 8 - mLen - 1,\n    eMax = (1 << eLen) - 1,\n    eBias = eMax >> 1,\n    rt = mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0,\n    i = bBE ? nBytes - 1 : 0,\n    d = bBE ? -1 : 1,\n    s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0;\n\n  value = Math.abs(value);\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0;\n    e = eMax;\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2);\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--;\n      c *= 2;\n    }\n    if (e + eBias >= 1) {\n      value += rt / c;\n    } else {\n      value += rt * Math.pow(2, 1 - eBias);\n    }\n    if (value * c >= 2) {\n      e++;\n      c /= 2;\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0;\n      e = eMax;\n    } else if (e + eBias >= 1) {\n      m = (value * c - 1) * Math.pow(2, mLen);\n      e = e + eBias;\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen);\n      e = 0;\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8);\n\n  e = (e << mLen) | m;\n  eLen += mLen;\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8);\n\n  buffer[offset + i - d] |= s * 128;\n};\n\nexports.readIEEE754 = readIEEE754;\nexports.writeIEEE754 = writeIEEE754;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIA,WAAW,GAAG,UAASC,MAAM,EAAEC,MAAM,EAAEC,MAAM,EAAEC,IAAI,EAAEC,MAAM,EAAE;EAC/D,IAAIC,CAAC;IACHC,CAAC;IACDC,GAAG,GAAGL,MAAM,KAAK,KAAK;IACtBM,IAAI,GAAGJ,MAAM,GAAG,CAAC,GAAGD,IAAI,GAAG,CAAC;IAC5BM,IAAI,GAAG,CAAC,CAAC,IAAID,IAAI,IAAI,CAAC;IACtBE,KAAK,GAAGD,IAAI,IAAI,CAAC;IACjBE,KAAK,GAAG,CAAC,CAAC;IACVC,CAAC,GAAGL,GAAG,GAAG,CAAC,GAAGH,MAAM,GAAG,CAAC;IACxBS,CAAC,GAAGN,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC;IAChBO,CAAC,GAAGd,MAAM,CAACC,MAAM,GAAGW,CAAC,CAAC;EAExBA,CAAC,IAAIC,CAAC;EAENR,CAAC,GAAGS,CAAC,GAAI,CAAC,CAAC,IAAI,CAACH,KAAK,IAAI,CAAE;EAC3BG,CAAC,KAAK,CAACH,KAAK;EACZA,KAAK,IAAIH,IAAI;EACb,OAAOG,KAAK,GAAG,CAAC,EAAEN,CAAC,GAAGA,CAAC,GAAG,GAAG,GAAGL,MAAM,CAACC,MAAM,GAAGW,CAAC,CAAC,EAAEA,CAAC,IAAIC,CAAC,EAAEF,KAAK,IAAI,CAAC,CAAC;EAEvEL,CAAC,GAAGD,CAAC,GAAI,CAAC,CAAC,IAAI,CAACM,KAAK,IAAI,CAAE;EAC3BN,CAAC,KAAK,CAACM,KAAK;EACZA,KAAK,IAAIR,IAAI;EACb,OAAOQ,KAAK,GAAG,CAAC,EAAEL,CAAC,GAAGA,CAAC,GAAG,GAAG,GAAGN,MAAM,CAACC,MAAM,GAAGW,CAAC,CAAC,EAAEA,CAAC,IAAIC,CAAC,EAAEF,KAAK,IAAI,CAAC,CAAC;EAEvE,IAAIN,CAAC,KAAK,CAAC,EAAE;IACXA,CAAC,GAAG,CAAC,GAAGK,KAAK;EACf,CAAC,MAAM,IAAIL,CAAC,KAAKI,IAAI,EAAE;IACrB,OAAOH,CAAC,GAAGS,GAAG,GAAG,CAACD,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAAIE,QAAQ;EAC1C,CAAC,MAAM;IACLV,CAAC,GAAGA,CAAC,GAAGW,IAAI,CAACC,GAAG,CAAC,CAAC,EAAEf,IAAI,CAAC;IACzBE,CAAC,GAAGA,CAAC,GAAGK,KAAK;EACf;EACA,OAAO,CAACI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAAIR,CAAC,GAAGW,IAAI,CAACC,GAAG,CAAC,CAAC,EAAEb,CAAC,GAAGF,IAAI,CAAC;AACjD,CAAC;AAED,IAAIgB,YAAY,GAAG,UAASnB,MAAM,EAAEoB,KAAK,EAAEnB,MAAM,EAAEC,MAAM,EAAEC,IAAI,EAAEC,MAAM,EAAE;EACvE,IAAIC,CAAC;IACHC,CAAC;IACDe,CAAC;IACDd,GAAG,GAAGL,MAAM,KAAK,KAAK;IACtBM,IAAI,GAAGJ,MAAM,GAAG,CAAC,GAAGD,IAAI,GAAG,CAAC;IAC5BM,IAAI,GAAG,CAAC,CAAC,IAAID,IAAI,IAAI,CAAC;IACtBE,KAAK,GAAGD,IAAI,IAAI,CAAC;IACjBa,EAAE,GAAGnB,IAAI,KAAK,EAAE,GAAGc,IAAI,CAACC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,GAAGD,IAAI,CAACC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC;IAC1DN,CAAC,GAAGL,GAAG,GAAGH,MAAM,GAAG,CAAC,GAAG,CAAC;IACxBS,CAAC,GAAGN,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC;IAChBO,CAAC,GAAGM,KAAK,GAAG,CAAC,IAAKA,KAAK,KAAK,CAAC,IAAI,CAAC,GAAGA,KAAK,GAAG,CAAE,GAAG,CAAC,GAAG,CAAC;EAEzDA,KAAK,GAAGH,IAAI,CAACM,GAAG,CAACH,KAAK,CAAC;EAEvB,IAAII,KAAK,CAACJ,KAAK,CAAC,IAAIA,KAAK,KAAKJ,QAAQ,EAAE;IACtCV,CAAC,GAAGkB,KAAK,CAACJ,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC;IACxBf,CAAC,GAAGI,IAAI;EACV,CAAC,MAAM;IACLJ,CAAC,GAAGY,IAAI,CAACQ,KAAK,CAACR,IAAI,CAACS,GAAG,CAACN,KAAK,CAAC,GAAGH,IAAI,CAACU,GAAG,CAAC;IAC1C,IAAIP,KAAK,IAAIC,CAAC,GAAGJ,IAAI,CAACC,GAAG,CAAC,CAAC,EAAE,CAACb,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE;MACrCA,CAAC,EAAE;MACHgB,CAAC,IAAI,CAAC;IACR;IACA,IAAIhB,CAAC,GAAGK,KAAK,IAAI,CAAC,EAAE;MAClBU,KAAK,IAAIE,EAAE,GAAGD,CAAC;IACjB,CAAC,MAAM;MACLD,KAAK,IAAIE,EAAE,GAAGL,IAAI,CAACC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAGR,KAAK,CAAC;IACtC;IACA,IAAIU,KAAK,GAAGC,CAAC,IAAI,CAAC,EAAE;MAClBhB,CAAC,EAAE;MACHgB,CAAC,IAAI,CAAC;IACR;IAEA,IAAIhB,CAAC,GAAGK,KAAK,IAAID,IAAI,EAAE;MACrBH,CAAC,GAAG,CAAC;MACLD,CAAC,GAAGI,IAAI;IACV,CAAC,MAAM,IAAIJ,CAAC,GAAGK,KAAK,IAAI,CAAC,EAAE;MACzBJ,CAAC,GAAG,CAACc,KAAK,GAAGC,CAAC,GAAG,CAAC,IAAIJ,IAAI,CAACC,GAAG,CAAC,CAAC,EAAEf,IAAI,CAAC;MACvCE,CAAC,GAAGA,CAAC,GAAGK,KAAK;IACf,CAAC,MAAM;MACLJ,CAAC,GAAGc,KAAK,GAAGH,IAAI,CAACC,GAAG,CAAC,CAAC,EAAER,KAAK,GAAG,CAAC,CAAC,GAAGO,IAAI,CAACC,GAAG,CAAC,CAAC,EAAEf,IAAI,CAAC;MACtDE,CAAC,GAAG,CAAC;IACP;EACF;EAEA,OAAOF,IAAI,IAAI,CAAC,EAAEH,MAAM,CAACC,MAAM,GAAGW,CAAC,CAAC,GAAGN,CAAC,GAAG,IAAI,EAAEM,CAAC,IAAIC,CAAC,EAAEP,CAAC,IAAI,GAAG,EAAEH,IAAI,IAAI,CAAC,CAAC;EAE7EE,CAAC,GAAIA,CAAC,IAAIF,IAAI,GAAIG,CAAC;EACnBE,IAAI,IAAIL,IAAI;EACZ,OAAOK,IAAI,GAAG,CAAC,EAAER,MAAM,CAACC,MAAM,GAAGW,CAAC,CAAC,GAAGP,CAAC,GAAG,IAAI,EAAEO,CAAC,IAAIC,CAAC,EAAER,CAAC,IAAI,GAAG,EAAEG,IAAI,IAAI,CAAC,CAAC;EAE5ER,MAAM,CAACC,MAAM,GAAGW,CAAC,GAAGC,CAAC,CAAC,IAAIC,CAAC,GAAG,GAAG;AACnC,CAAC;AAEDc,OAAO,CAAC7B,WAAW,GAAGA,WAAW;AACjC6B,OAAO,CAACT,YAAY,GAAGA,YAAY"},"metadata":{},"sourceType":"script"}