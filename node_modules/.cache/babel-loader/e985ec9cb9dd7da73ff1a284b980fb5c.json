{"ast":null,"code":"'use strict';\n\nvar Long = require('../long').Long,\n  Double = require('../double').Double,\n  Timestamp = require('../timestamp').Timestamp,\n  ObjectID = require('../objectid').ObjectID,\n  Symbol = require('../symbol').Symbol,\n  BSONRegExp = require('../regexp').BSONRegExp,\n  Code = require('../code').Code,\n  Decimal128 = require('../decimal128'),\n  MinKey = require('../min_key').MinKey,\n  MaxKey = require('../max_key').MaxKey,\n  DBRef = require('../db_ref').DBRef,\n  Binary = require('../binary').Binary;\nvar normalizedFunctionString = require('./utils').normalizedFunctionString;\n\n// To ensure that 0.4 of node works correctly\nvar isDate = function isDate(d) {\n  return typeof d === 'object' && Object.prototype.toString.call(d) === '[object Date]';\n};\nvar calculateObjectSize = function calculateObjectSize(object, serializeFunctions, ignoreUndefined) {\n  var totalLength = 4 + 1;\n  if (Array.isArray(object)) {\n    for (var i = 0; i < object.length; i++) {\n      totalLength += calculateElement(i.toString(), object[i], serializeFunctions, true, ignoreUndefined);\n    }\n  } else {\n    // If we have toBSON defined, override the current object\n    if (object.toBSON) {\n      object = object.toBSON();\n    }\n\n    // Calculate size\n    for (var key in object) {\n      totalLength += calculateElement(key, object[key], serializeFunctions, false, ignoreUndefined);\n    }\n  }\n  return totalLength;\n};\n\n/**\n * @ignore\n * @api private\n */\nfunction calculateElement(name, value, serializeFunctions, isArray, ignoreUndefined) {\n  // If we have toBSON defined, override the current object\n  if (value && value.toBSON) {\n    value = value.toBSON();\n  }\n  switch (typeof value) {\n    case 'string':\n      return 1 + Buffer.byteLength(name, 'utf8') + 1 + 4 + Buffer.byteLength(value, 'utf8') + 1;\n    case 'number':\n      if (Math.floor(value) === value && value >= BSON.JS_INT_MIN && value <= BSON.JS_INT_MAX) {\n        if (value >= BSON.BSON_INT32_MIN && value <= BSON.BSON_INT32_MAX) {\n          // 32 bit\n          return (name != null ? Buffer.byteLength(name, 'utf8') + 1 : 0) + (4 + 1);\n        } else {\n          return (name != null ? Buffer.byteLength(name, 'utf8') + 1 : 0) + (8 + 1);\n        }\n      } else {\n        // 64 bit\n        return (name != null ? Buffer.byteLength(name, 'utf8') + 1 : 0) + (8 + 1);\n      }\n    case 'undefined':\n      if (isArray || !ignoreUndefined) return (name != null ? Buffer.byteLength(name, 'utf8') + 1 : 0) + 1;\n      return 0;\n    case 'boolean':\n      return (name != null ? Buffer.byteLength(name, 'utf8') + 1 : 0) + (1 + 1);\n    case 'object':\n      if (value == null || value instanceof MinKey || value instanceof MaxKey || value['_bsontype'] === 'MinKey' || value['_bsontype'] === 'MaxKey') {\n        return (name != null ? Buffer.byteLength(name, 'utf8') + 1 : 0) + 1;\n      } else if (value instanceof ObjectID || value['_bsontype'] === 'ObjectID' || value['_bsontype'] === 'ObjectId') {\n        return (name != null ? Buffer.byteLength(name, 'utf8') + 1 : 0) + (12 + 1);\n      } else if (value instanceof Date || isDate(value)) {\n        return (name != null ? Buffer.byteLength(name, 'utf8') + 1 : 0) + (8 + 1);\n      } else if (typeof Buffer !== 'undefined' && Buffer.isBuffer(value)) {\n        return (name != null ? Buffer.byteLength(name, 'utf8') + 1 : 0) + (1 + 4 + 1) + value.length;\n      } else if (value instanceof Long || value instanceof Double || value instanceof Timestamp || value['_bsontype'] === 'Long' || value['_bsontype'] === 'Double' || value['_bsontype'] === 'Timestamp') {\n        return (name != null ? Buffer.byteLength(name, 'utf8') + 1 : 0) + (8 + 1);\n      } else if (value instanceof Decimal128 || value['_bsontype'] === 'Decimal128') {\n        return (name != null ? Buffer.byteLength(name, 'utf8') + 1 : 0) + (16 + 1);\n      } else if (value instanceof Code || value['_bsontype'] === 'Code') {\n        // Calculate size depending on the availability of a scope\n        if (value.scope != null && Object.keys(value.scope).length > 0) {\n          return (name != null ? Buffer.byteLength(name, 'utf8') + 1 : 0) + 1 + 4 + 4 + Buffer.byteLength(value.code.toString(), 'utf8') + 1 + calculateObjectSize(value.scope, serializeFunctions, ignoreUndefined);\n        } else {\n          return (name != null ? Buffer.byteLength(name, 'utf8') + 1 : 0) + 1 + 4 + Buffer.byteLength(value.code.toString(), 'utf8') + 1;\n        }\n      } else if (value instanceof Binary || value['_bsontype'] === 'Binary') {\n        // Check what kind of subtype we have\n        if (value.sub_type === Binary.SUBTYPE_BYTE_ARRAY) {\n          return (name != null ? Buffer.byteLength(name, 'utf8') + 1 : 0) + (value.position + 1 + 4 + 1 + 4);\n        } else {\n          return (name != null ? Buffer.byteLength(name, 'utf8') + 1 : 0) + (value.position + 1 + 4 + 1);\n        }\n      } else if (value instanceof Symbol || value['_bsontype'] === 'Symbol') {\n        return (name != null ? Buffer.byteLength(name, 'utf8') + 1 : 0) + Buffer.byteLength(value.value, 'utf8') + 4 + 1 + 1;\n      } else if (value instanceof DBRef || value['_bsontype'] === 'DBRef') {\n        // Set up correct object for serialization\n        var ordered_values = {\n          $ref: value.namespace,\n          $id: value.oid\n        };\n\n        // Add db reference if it exists\n        if (null != value.db) {\n          ordered_values['$db'] = value.db;\n        }\n        return (name != null ? Buffer.byteLength(name, 'utf8') + 1 : 0) + 1 + calculateObjectSize(ordered_values, serializeFunctions, ignoreUndefined);\n      } else if (value instanceof RegExp || Object.prototype.toString.call(value) === '[object RegExp]') {\n        return (name != null ? Buffer.byteLength(name, 'utf8') + 1 : 0) + 1 + Buffer.byteLength(value.source, 'utf8') + 1 + (value.global ? 1 : 0) + (value.ignoreCase ? 1 : 0) + (value.multiline ? 1 : 0) + 1;\n      } else if (value instanceof BSONRegExp || value['_bsontype'] === 'BSONRegExp') {\n        return (name != null ? Buffer.byteLength(name, 'utf8') + 1 : 0) + 1 + Buffer.byteLength(value.pattern, 'utf8') + 1 + Buffer.byteLength(value.options, 'utf8') + 1;\n      } else {\n        return (name != null ? Buffer.byteLength(name, 'utf8') + 1 : 0) + calculateObjectSize(value, serializeFunctions, ignoreUndefined) + 1;\n      }\n    case 'function':\n      // WTF for 0.4.X where typeof /someregexp/ === 'function'\n      if (value instanceof RegExp || Object.prototype.toString.call(value) === '[object RegExp]' || String.call(value) === '[object RegExp]') {\n        return (name != null ? Buffer.byteLength(name, 'utf8') + 1 : 0) + 1 + Buffer.byteLength(value.source, 'utf8') + 1 + (value.global ? 1 : 0) + (value.ignoreCase ? 1 : 0) + (value.multiline ? 1 : 0) + 1;\n      } else {\n        if (serializeFunctions && value.scope != null && Object.keys(value.scope).length > 0) {\n          return (name != null ? Buffer.byteLength(name, 'utf8') + 1 : 0) + 1 + 4 + 4 + Buffer.byteLength(normalizedFunctionString(value), 'utf8') + 1 + calculateObjectSize(value.scope, serializeFunctions, ignoreUndefined);\n        } else if (serializeFunctions) {\n          return (name != null ? Buffer.byteLength(name, 'utf8') + 1 : 0) + 1 + 4 + Buffer.byteLength(normalizedFunctionString(value), 'utf8') + 1;\n        }\n      }\n  }\n  return 0;\n}\nvar BSON = {};\n\n// BSON MAX VALUES\nBSON.BSON_INT32_MAX = 0x7fffffff;\nBSON.BSON_INT32_MIN = -0x80000000;\n\n// JS MAX PRECISE VALUES\nBSON.JS_INT_MAX = 0x20000000000000; // Any integer up to 2^53 can be precisely represented by a double.\nBSON.JS_INT_MIN = -0x20000000000000; // Any integer down to -2^53 can be precisely represented by a double.\n\nmodule.exports = calculateObjectSize;","map":{"version":3,"names":["Long","require","Double","Timestamp","ObjectID","Symbol","BSONRegExp","Code","Decimal128","MinKey","MaxKey","DBRef","Binary","normalizedFunctionString","isDate","d","Object","prototype","toString","call","calculateObjectSize","object","serializeFunctions","ignoreUndefined","totalLength","Array","isArray","i","length","calculateElement","toBSON","key","name","value","Buffer","byteLength","Math","floor","BSON","JS_INT_MIN","JS_INT_MAX","BSON_INT32_MIN","BSON_INT32_MAX","Date","isBuffer","scope","keys","code","sub_type","SUBTYPE_BYTE_ARRAY","position","ordered_values","$ref","namespace","$id","oid","db","RegExp","source","global","ignoreCase","multiline","pattern","options","String","module","exports"],"sources":["C:/Users/minix/Documents/GitHub/digital-portfolio-projects/digital-portfolio-projects/node_modules/bson/lib/bson/parser/calculate_size.js"],"sourcesContent":["'use strict';\n\nvar Long = require('../long').Long,\n  Double = require('../double').Double,\n  Timestamp = require('../timestamp').Timestamp,\n  ObjectID = require('../objectid').ObjectID,\n  Symbol = require('../symbol').Symbol,\n  BSONRegExp = require('../regexp').BSONRegExp,\n  Code = require('../code').Code,\n  Decimal128 = require('../decimal128'),\n  MinKey = require('../min_key').MinKey,\n  MaxKey = require('../max_key').MaxKey,\n  DBRef = require('../db_ref').DBRef,\n  Binary = require('../binary').Binary;\n\nvar normalizedFunctionString = require('./utils').normalizedFunctionString;\n\n// To ensure that 0.4 of node works correctly\nvar isDate = function isDate(d) {\n  return typeof d === 'object' && Object.prototype.toString.call(d) === '[object Date]';\n};\n\nvar calculateObjectSize = function calculateObjectSize(\n  object,\n  serializeFunctions,\n  ignoreUndefined\n) {\n  var totalLength = 4 + 1;\n\n  if (Array.isArray(object)) {\n    for (var i = 0; i < object.length; i++) {\n      totalLength += calculateElement(\n        i.toString(),\n        object[i],\n        serializeFunctions,\n        true,\n        ignoreUndefined\n      );\n    }\n  } else {\n    // If we have toBSON defined, override the current object\n    if (object.toBSON) {\n      object = object.toBSON();\n    }\n\n    // Calculate size\n    for (var key in object) {\n      totalLength += calculateElement(key, object[key], serializeFunctions, false, ignoreUndefined);\n    }\n  }\n\n  return totalLength;\n};\n\n/**\n * @ignore\n * @api private\n */\nfunction calculateElement(name, value, serializeFunctions, isArray, ignoreUndefined) {\n  // If we have toBSON defined, override the current object\n  if (value && value.toBSON) {\n    value = value.toBSON();\n  }\n\n  switch (typeof value) {\n    case 'string':\n      return 1 + Buffer.byteLength(name, 'utf8') + 1 + 4 + Buffer.byteLength(value, 'utf8') + 1;\n    case 'number':\n      if (Math.floor(value) === value && value >= BSON.JS_INT_MIN && value <= BSON.JS_INT_MAX) {\n        if (value >= BSON.BSON_INT32_MIN && value <= BSON.BSON_INT32_MAX) {\n          // 32 bit\n          return (name != null ? Buffer.byteLength(name, 'utf8') + 1 : 0) + (4 + 1);\n        } else {\n          return (name != null ? Buffer.byteLength(name, 'utf8') + 1 : 0) + (8 + 1);\n        }\n      } else {\n        // 64 bit\n        return (name != null ? Buffer.byteLength(name, 'utf8') + 1 : 0) + (8 + 1);\n      }\n    case 'undefined':\n      if (isArray || !ignoreUndefined)\n        return (name != null ? Buffer.byteLength(name, 'utf8') + 1 : 0) + 1;\n      return 0;\n    case 'boolean':\n      return (name != null ? Buffer.byteLength(name, 'utf8') + 1 : 0) + (1 + 1);\n    case 'object':\n      if (\n        value == null ||\n        value instanceof MinKey ||\n        value instanceof MaxKey ||\n        value['_bsontype'] === 'MinKey' ||\n        value['_bsontype'] === 'MaxKey'\n      ) {\n        return (name != null ? Buffer.byteLength(name, 'utf8') + 1 : 0) + 1;\n      } else if (value instanceof ObjectID || value['_bsontype'] === 'ObjectID' || value['_bsontype'] === 'ObjectId') {\n        return (name != null ? Buffer.byteLength(name, 'utf8') + 1 : 0) + (12 + 1);\n      } else if (value instanceof Date || isDate(value)) {\n        return (name != null ? Buffer.byteLength(name, 'utf8') + 1 : 0) + (8 + 1);\n      } else if (typeof Buffer !== 'undefined' && Buffer.isBuffer(value)) {\n        return (\n          (name != null ? Buffer.byteLength(name, 'utf8') + 1 : 0) + (1 + 4 + 1) + value.length\n        );\n      } else if (\n        value instanceof Long ||\n        value instanceof Double ||\n        value instanceof Timestamp ||\n        value['_bsontype'] === 'Long' ||\n        value['_bsontype'] === 'Double' ||\n        value['_bsontype'] === 'Timestamp'\n      ) {\n        return (name != null ? Buffer.byteLength(name, 'utf8') + 1 : 0) + (8 + 1);\n      } else if (value instanceof Decimal128 || value['_bsontype'] === 'Decimal128') {\n        return (name != null ? Buffer.byteLength(name, 'utf8') + 1 : 0) + (16 + 1);\n      } else if (value instanceof Code || value['_bsontype'] === 'Code') {\n        // Calculate size depending on the availability of a scope\n        if (value.scope != null && Object.keys(value.scope).length > 0) {\n          return (\n            (name != null ? Buffer.byteLength(name, 'utf8') + 1 : 0) +\n            1 +\n            4 +\n            4 +\n            Buffer.byteLength(value.code.toString(), 'utf8') +\n            1 +\n            calculateObjectSize(value.scope, serializeFunctions, ignoreUndefined)\n          );\n        } else {\n          return (\n            (name != null ? Buffer.byteLength(name, 'utf8') + 1 : 0) +\n            1 +\n            4 +\n            Buffer.byteLength(value.code.toString(), 'utf8') +\n            1\n          );\n        }\n      } else if (value instanceof Binary || value['_bsontype'] === 'Binary') {\n        // Check what kind of subtype we have\n        if (value.sub_type === Binary.SUBTYPE_BYTE_ARRAY) {\n          return (\n            (name != null ? Buffer.byteLength(name, 'utf8') + 1 : 0) +\n            (value.position + 1 + 4 + 1 + 4)\n          );\n        } else {\n          return (\n            (name != null ? Buffer.byteLength(name, 'utf8') + 1 : 0) + (value.position + 1 + 4 + 1)\n          );\n        }\n      } else if (value instanceof Symbol || value['_bsontype'] === 'Symbol') {\n        return (\n          (name != null ? Buffer.byteLength(name, 'utf8') + 1 : 0) +\n          Buffer.byteLength(value.value, 'utf8') +\n          4 +\n          1 +\n          1\n        );\n      } else if (value instanceof DBRef || value['_bsontype'] === 'DBRef') {\n        // Set up correct object for serialization\n        var ordered_values = {\n          $ref: value.namespace,\n          $id: value.oid\n        };\n\n        // Add db reference if it exists\n        if (null != value.db) {\n          ordered_values['$db'] = value.db;\n        }\n\n        return (\n          (name != null ? Buffer.byteLength(name, 'utf8') + 1 : 0) +\n          1 +\n          calculateObjectSize(ordered_values, serializeFunctions, ignoreUndefined)\n        );\n      } else if (\n        value instanceof RegExp ||\n        Object.prototype.toString.call(value) === '[object RegExp]'\n      ) {\n        return (\n          (name != null ? Buffer.byteLength(name, 'utf8') + 1 : 0) +\n          1 +\n          Buffer.byteLength(value.source, 'utf8') +\n          1 +\n          (value.global ? 1 : 0) +\n          (value.ignoreCase ? 1 : 0) +\n          (value.multiline ? 1 : 0) +\n          1\n        );\n      } else if (value instanceof BSONRegExp || value['_bsontype'] === 'BSONRegExp') {\n        return (\n          (name != null ? Buffer.byteLength(name, 'utf8') + 1 : 0) +\n          1 +\n          Buffer.byteLength(value.pattern, 'utf8') +\n          1 +\n          Buffer.byteLength(value.options, 'utf8') +\n          1\n        );\n      } else {\n        return (\n          (name != null ? Buffer.byteLength(name, 'utf8') + 1 : 0) +\n          calculateObjectSize(value, serializeFunctions, ignoreUndefined) +\n          1\n        );\n      }\n    case 'function':\n      // WTF for 0.4.X where typeof /someregexp/ === 'function'\n      if (\n        value instanceof RegExp ||\n        Object.prototype.toString.call(value) === '[object RegExp]' ||\n        String.call(value) === '[object RegExp]'\n      ) {\n        return (\n          (name != null ? Buffer.byteLength(name, 'utf8') + 1 : 0) +\n          1 +\n          Buffer.byteLength(value.source, 'utf8') +\n          1 +\n          (value.global ? 1 : 0) +\n          (value.ignoreCase ? 1 : 0) +\n          (value.multiline ? 1 : 0) +\n          1\n        );\n      } else {\n        if (serializeFunctions && value.scope != null && Object.keys(value.scope).length > 0) {\n          return (\n            (name != null ? Buffer.byteLength(name, 'utf8') + 1 : 0) +\n            1 +\n            4 +\n            4 +\n            Buffer.byteLength(normalizedFunctionString(value), 'utf8') +\n            1 +\n            calculateObjectSize(value.scope, serializeFunctions, ignoreUndefined)\n          );\n        } else if (serializeFunctions) {\n          return (\n            (name != null ? Buffer.byteLength(name, 'utf8') + 1 : 0) +\n            1 +\n            4 +\n            Buffer.byteLength(normalizedFunctionString(value), 'utf8') +\n            1\n          );\n        }\n      }\n  }\n\n  return 0;\n}\n\nvar BSON = {};\n\n// BSON MAX VALUES\nBSON.BSON_INT32_MAX = 0x7fffffff;\nBSON.BSON_INT32_MIN = -0x80000000;\n\n// JS MAX PRECISE VALUES\nBSON.JS_INT_MAX = 0x20000000000000; // Any integer up to 2^53 can be precisely represented by a double.\nBSON.JS_INT_MIN = -0x20000000000000; // Any integer down to -2^53 can be precisely represented by a double.\n\nmodule.exports = calculateObjectSize;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}