{"ast":null,"code":"\"use strict\";\n\nconst Path = require(\"path\");\nconst Fs = require(\"fs\");\nconst createRequireFromPath = require(\"./create-require\");\nconst cache = new Map();\nfunction requireAt(dir, request) {\n  const makeIt = (xdir, checked) => {\n    let xRequire = requireAt.cache && requireAt.cache.get(xdir);\n    if (!xRequire) {\n      let stat;\n      try {\n        stat = Fs.statSync(xdir);\n      } catch (e) {\n        throw new Error(`require-at: stat '${xdir}' failed: ${e.message}`);\n      }\n      if (!stat || !stat.isDirectory()) {\n        if (checked) throw new Error(`require-at: not a directory: '${dir}'`);\n        return makeIt(Path.dirname(xdir), true);\n      }\n      xRequire = createRequireFromPath(Path.join(xdir, \"._require-at_\"), xdir);\n      requireAt.cache && requireAt.cache.set(xdir, xRequire);\n    }\n    return request ? xRequire(request) : xRequire;\n  };\n  return makeIt(Path.resolve(dir), false);\n}\nrequireAt.cache = cache;\nmodule.exports = requireAt;","map":{"version":3,"names":["Path","require","Fs","createRequireFromPath","cache","Map","requireAt","dir","request","makeIt","xdir","checked","xRequire","get","stat","statSync","e","Error","message","isDirectory","dirname","join","set","resolve","module","exports"],"sources":["C:/Users/minix/Documents/GitHub/digital-portfolio-projects/digital-portfolio-projects/node_modules/require-at/require-at.js"],"sourcesContent":["\"use strict\";\n\nconst Path = require(\"path\");\nconst Fs = require(\"fs\");\n\nconst createRequireFromPath = require(\"./create-require\");\n\nconst cache = new Map();\n\nfunction requireAt(dir, request) {\n  const makeIt = (xdir, checked) => {\n    let xRequire = requireAt.cache && requireAt.cache.get(xdir);\n\n    if (!xRequire) {\n      let stat;\n      try {\n        stat = Fs.statSync(xdir);\n      } catch (e) {\n        throw new Error(`require-at: stat '${xdir}' failed: ${e.message}`);\n      }\n\n      if (!stat || !stat.isDirectory()) {\n        if (checked) throw new Error(`require-at: not a directory: '${dir}'`);\n        return makeIt(Path.dirname(xdir), true);\n      }\n\n      xRequire = createRequireFromPath(Path.join(xdir, \"._require-at_\"), xdir);\n\n      requireAt.cache && requireAt.cache.set(xdir, xRequire);\n    }\n\n    return request ? xRequire(request) : xRequire;\n  };\n\n  return makeIt(Path.resolve(dir), false);\n}\n\nrequireAt.cache = cache;\n\nmodule.exports = requireAt;\n"],"mappings":"AAAA,YAAY;;AAEZ,MAAMA,IAAI,GAAGC,OAAO,CAAC,MAAM,CAAC;AAC5B,MAAMC,EAAE,GAAGD,OAAO,CAAC,IAAI,CAAC;AAExB,MAAME,qBAAqB,GAAGF,OAAO,CAAC,kBAAkB,CAAC;AAEzD,MAAMG,KAAK,GAAG,IAAIC,GAAG,EAAE;AAEvB,SAASC,SAAS,CAACC,GAAG,EAAEC,OAAO,EAAE;EAC/B,MAAMC,MAAM,GAAG,CAACC,IAAI,EAAEC,OAAO,KAAK;IAChC,IAAIC,QAAQ,GAAGN,SAAS,CAACF,KAAK,IAAIE,SAAS,CAACF,KAAK,CAACS,GAAG,CAACH,IAAI,CAAC;IAE3D,IAAI,CAACE,QAAQ,EAAE;MACb,IAAIE,IAAI;MACR,IAAI;QACFA,IAAI,GAAGZ,EAAE,CAACa,QAAQ,CAACL,IAAI,CAAC;MAC1B,CAAC,CAAC,OAAOM,CAAC,EAAE;QACV,MAAM,IAAIC,KAAK,CAAE,qBAAoBP,IAAK,aAAYM,CAAC,CAACE,OAAQ,EAAC,CAAC;MACpE;MAEA,IAAI,CAACJ,IAAI,IAAI,CAACA,IAAI,CAACK,WAAW,EAAE,EAAE;QAChC,IAAIR,OAAO,EAAE,MAAM,IAAIM,KAAK,CAAE,iCAAgCV,GAAI,GAAE,CAAC;QACrE,OAAOE,MAAM,CAACT,IAAI,CAACoB,OAAO,CAACV,IAAI,CAAC,EAAE,IAAI,CAAC;MACzC;MAEAE,QAAQ,GAAGT,qBAAqB,CAACH,IAAI,CAACqB,IAAI,CAACX,IAAI,EAAE,eAAe,CAAC,EAAEA,IAAI,CAAC;MAExEJ,SAAS,CAACF,KAAK,IAAIE,SAAS,CAACF,KAAK,CAACkB,GAAG,CAACZ,IAAI,EAAEE,QAAQ,CAAC;IACxD;IAEA,OAAOJ,OAAO,GAAGI,QAAQ,CAACJ,OAAO,CAAC,GAAGI,QAAQ;EAC/C,CAAC;EAED,OAAOH,MAAM,CAACT,IAAI,CAACuB,OAAO,CAAChB,GAAG,CAAC,EAAE,KAAK,CAAC;AACzC;AAEAD,SAAS,CAACF,KAAK,GAAGA,KAAK;AAEvBoB,MAAM,CAACC,OAAO,GAAGnB,SAAS"},"metadata":{},"sourceType":"script"}