{"ast":null,"code":"'use strict';\n\nconst kWriteConcernKeys = new Set(['w', 'wtimeout', 'j', 'journal', 'fsync']);\nlet utils;\n\n/**\n * The **WriteConcern** class is a class that represents a MongoDB WriteConcern.\n * @class\n * @property {(number|string)} w The write concern\n * @property {number} wtimeout The write concern timeout\n * @property {boolean} j The journal write concern\n * @property {boolean} fsync The file sync write concern\n * @see https://docs.mongodb.com/manual/reference/write-concern/index.html\n */\nclass WriteConcern {\n  /**\n   * Constructs a WriteConcern from the write concern properties.\n   * @param {(number|string)} [w] The write concern\n   * @param {number} [wtimeout] The write concern timeout\n   * @param {boolean} [j] The journal write concern\n   * @param {boolean} [fsync] The file sync write concern\n   */\n  constructor(w, wtimeout, j, fsync) {\n    if (w != null) {\n      this.w = w;\n    }\n    if (wtimeout != null) {\n      this.wtimeout = wtimeout;\n    }\n    if (j != null) {\n      this.j = j;\n    }\n    if (fsync != null) {\n      this.fsync = fsync;\n    }\n  }\n\n  /**\n   * Construct a WriteConcern given an options object.\n   *\n   * @param {object} [options] The options object from which to extract the write concern.\n   * @param {(number|string)} [options.w] **Deprecated** Use `options.writeConcern` instead\n   * @param {number} [options.wtimeout] **Deprecated** Use `options.writeConcern` instead\n   * @param {boolean} [options.j] **Deprecated** Use `options.writeConcern` instead\n   * @param {boolean} [options.fsync] **Deprecated** Use `options.writeConcern` instead\n   * @param {object|WriteConcern} [options.writeConcern] Specify write concern settings.\n   * @return {WriteConcern}\n   */\n  static fromOptions(options) {\n    if (options == null || options.writeConcern == null && options.w == null && options.wtimeout == null && options.j == null && options.journal == null && options.fsync == null) {\n      return;\n    }\n    if (options.writeConcern) {\n      if (typeof options.writeConcern === 'string') {\n        return new WriteConcern(options.writeConcern);\n      }\n      if (!Object.keys(options.writeConcern).some(key => kWriteConcernKeys.has(key))) {\n        return;\n      }\n      return new WriteConcern(options.writeConcern.w, options.writeConcern.wtimeout, options.writeConcern.j || options.writeConcern.journal, options.writeConcern.fsync);\n    }\n\n    // this is down here to prevent circular dependency\n    if (!utils) utils = require('./utils');\n    utils.emitWarningOnce(`Top-level use of w, wtimeout, j, and fsync is deprecated. Use writeConcern instead.`);\n    return new WriteConcern(options.w, options.wtimeout, options.j || options.journal, options.fsync);\n  }\n}\nmodule.exports = WriteConcern;","map":{"version":3,"names":["kWriteConcernKeys","Set","utils","WriteConcern","constructor","w","wtimeout","j","fsync","fromOptions","options","writeConcern","journal","Object","keys","some","key","has","require","emitWarningOnce","module","exports"],"sources":["C:/Users/minix/Documents/GitHub/digital-portfolio-projects/digital-portfolio-projects/node_modules/mongodb/lib/write_concern.js"],"sourcesContent":["'use strict';\n\nconst kWriteConcernKeys = new Set(['w', 'wtimeout', 'j', 'journal', 'fsync']);\nlet utils;\n\n/**\n * The **WriteConcern** class is a class that represents a MongoDB WriteConcern.\n * @class\n * @property {(number|string)} w The write concern\n * @property {number} wtimeout The write concern timeout\n * @property {boolean} j The journal write concern\n * @property {boolean} fsync The file sync write concern\n * @see https://docs.mongodb.com/manual/reference/write-concern/index.html\n */\nclass WriteConcern {\n  /**\n   * Constructs a WriteConcern from the write concern properties.\n   * @param {(number|string)} [w] The write concern\n   * @param {number} [wtimeout] The write concern timeout\n   * @param {boolean} [j] The journal write concern\n   * @param {boolean} [fsync] The file sync write concern\n   */\n  constructor(w, wtimeout, j, fsync) {\n    if (w != null) {\n      this.w = w;\n    }\n    if (wtimeout != null) {\n      this.wtimeout = wtimeout;\n    }\n    if (j != null) {\n      this.j = j;\n    }\n    if (fsync != null) {\n      this.fsync = fsync;\n    }\n  }\n\n  /**\n   * Construct a WriteConcern given an options object.\n   *\n   * @param {object} [options] The options object from which to extract the write concern.\n   * @param {(number|string)} [options.w] **Deprecated** Use `options.writeConcern` instead\n   * @param {number} [options.wtimeout] **Deprecated** Use `options.writeConcern` instead\n   * @param {boolean} [options.j] **Deprecated** Use `options.writeConcern` instead\n   * @param {boolean} [options.fsync] **Deprecated** Use `options.writeConcern` instead\n   * @param {object|WriteConcern} [options.writeConcern] Specify write concern settings.\n   * @return {WriteConcern}\n   */\n  static fromOptions(options) {\n    if (\n      options == null ||\n      (options.writeConcern == null &&\n        options.w == null &&\n        options.wtimeout == null &&\n        options.j == null &&\n        options.journal == null &&\n        options.fsync == null)\n    ) {\n      return;\n    }\n\n    if (options.writeConcern) {\n      if (typeof options.writeConcern === 'string') {\n        return new WriteConcern(options.writeConcern);\n      }\n\n      if (!Object.keys(options.writeConcern).some(key => kWriteConcernKeys.has(key))) {\n        return;\n      }\n\n      return new WriteConcern(\n        options.writeConcern.w,\n        options.writeConcern.wtimeout,\n        options.writeConcern.j || options.writeConcern.journal,\n        options.writeConcern.fsync\n      );\n    }\n\n    // this is down here to prevent circular dependency\n    if (!utils) utils = require('./utils');\n\n    utils.emitWarningOnce(\n      `Top-level use of w, wtimeout, j, and fsync is deprecated. Use writeConcern instead.`\n    );\n    return new WriteConcern(\n      options.w,\n      options.wtimeout,\n      options.j || options.journal,\n      options.fsync\n    );\n  }\n}\n\nmodule.exports = WriteConcern;\n"],"mappings":"AAAA,YAAY;;AAEZ,MAAMA,iBAAiB,GAAG,IAAIC,GAAG,CAAC,CAAC,GAAG,EAAE,UAAU,EAAE,GAAG,EAAE,SAAS,EAAE,OAAO,CAAC,CAAC;AAC7E,IAAIC,KAAK;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,YAAY,CAAC;EACjB;AACF;AACA;AACA;AACA;AACA;AACA;EACEC,WAAW,CAACC,CAAC,EAAEC,QAAQ,EAAEC,CAAC,EAAEC,KAAK,EAAE;IACjC,IAAIH,CAAC,IAAI,IAAI,EAAE;MACb,IAAI,CAACA,CAAC,GAAGA,CAAC;IACZ;IACA,IAAIC,QAAQ,IAAI,IAAI,EAAE;MACpB,IAAI,CAACA,QAAQ,GAAGA,QAAQ;IAC1B;IACA,IAAIC,CAAC,IAAI,IAAI,EAAE;MACb,IAAI,CAACA,CAAC,GAAGA,CAAC;IACZ;IACA,IAAIC,KAAK,IAAI,IAAI,EAAE;MACjB,IAAI,CAACA,KAAK,GAAGA,KAAK;IACpB;EACF;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,OAAOC,WAAW,CAACC,OAAO,EAAE;IAC1B,IACEA,OAAO,IAAI,IAAI,IACdA,OAAO,CAACC,YAAY,IAAI,IAAI,IAC3BD,OAAO,CAACL,CAAC,IAAI,IAAI,IACjBK,OAAO,CAACJ,QAAQ,IAAI,IAAI,IACxBI,OAAO,CAACH,CAAC,IAAI,IAAI,IACjBG,OAAO,CAACE,OAAO,IAAI,IAAI,IACvBF,OAAO,CAACF,KAAK,IAAI,IAAK,EACxB;MACA;IACF;IAEA,IAAIE,OAAO,CAACC,YAAY,EAAE;MACxB,IAAI,OAAOD,OAAO,CAACC,YAAY,KAAK,QAAQ,EAAE;QAC5C,OAAO,IAAIR,YAAY,CAACO,OAAO,CAACC,YAAY,CAAC;MAC/C;MAEA,IAAI,CAACE,MAAM,CAACC,IAAI,CAACJ,OAAO,CAACC,YAAY,CAAC,CAACI,IAAI,CAACC,GAAG,IAAIhB,iBAAiB,CAACiB,GAAG,CAACD,GAAG,CAAC,CAAC,EAAE;QAC9E;MACF;MAEA,OAAO,IAAIb,YAAY,CACrBO,OAAO,CAACC,YAAY,CAACN,CAAC,EACtBK,OAAO,CAACC,YAAY,CAACL,QAAQ,EAC7BI,OAAO,CAACC,YAAY,CAACJ,CAAC,IAAIG,OAAO,CAACC,YAAY,CAACC,OAAO,EACtDF,OAAO,CAACC,YAAY,CAACH,KAAK,CAC3B;IACH;;IAEA;IACA,IAAI,CAACN,KAAK,EAAEA,KAAK,GAAGgB,OAAO,CAAC,SAAS,CAAC;IAEtChB,KAAK,CAACiB,eAAe,CAClB,qFAAoF,CACtF;IACD,OAAO,IAAIhB,YAAY,CACrBO,OAAO,CAACL,CAAC,EACTK,OAAO,CAACJ,QAAQ,EAChBI,OAAO,CAACH,CAAC,IAAIG,OAAO,CAACE,OAAO,EAC5BF,OAAO,CAACF,KAAK,CACd;EACH;AACF;AAEAY,MAAM,CAACC,OAAO,GAAGlB,YAAY"},"metadata":{},"sourceType":"script"}