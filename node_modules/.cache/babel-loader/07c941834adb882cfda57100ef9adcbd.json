{"ast":null,"code":"'use strict';\n\nconst Query = require('../connection/commands').Query;\nconst MongoError = require('../error').MongoError;\nconst getReadPreference = require('./shared').getReadPreference;\nconst collectionNamespace = require('./shared').collectionNamespace;\nconst isSharded = require('./shared').isSharded;\nconst maxWireVersion = require('../utils').maxWireVersion;\nconst applyCommonQueryOptions = require('./shared').applyCommonQueryOptions;\nconst command = require('./command');\nconst decorateWithExplain = require('../../utils').decorateWithExplain;\nconst Explain = require('../../explain').Explain;\nfunction query(server, ns, cmd, cursorState, options, callback) {\n  options = options || {};\n  if (cursorState.cursorId != null) {\n    return callback();\n  }\n  if (cmd == null) {\n    return callback(new MongoError(`command ${JSON.stringify(cmd)} does not return a cursor`));\n  }\n  if (maxWireVersion(server) < 4) {\n    const query = prepareLegacyFindQuery(server, ns, cmd, cursorState, options);\n    const queryOptions = applyCommonQueryOptions({}, cursorState);\n    if (typeof query.documentsReturnedIn === 'string') {\n      queryOptions.documentsReturnedIn = query.documentsReturnedIn;\n    }\n    server.s.pool.write(query, queryOptions, callback);\n    return;\n  }\n  const readPreference = getReadPreference(cmd, options);\n  let findCmd = prepareFindCommand(server, ns, cmd, cursorState, options);\n\n  // If we have explain, we need to rewrite the find command\n  // to wrap it in the explain command\n  const explain = Explain.fromOptions(options);\n  if (explain) {\n    findCmd = decorateWithExplain(findCmd, explain);\n  }\n\n  // NOTE: This actually modifies the passed in cmd, and our code _depends_ on this\n  //       side-effect. Change this ASAP\n  cmd.virtual = false;\n  const commandOptions = Object.assign({\n    documentsReturnedIn: 'firstBatch',\n    numberToReturn: 1,\n    slaveOk: readPreference.slaveOk()\n  }, options);\n  if (cmd.readPreference) {\n    commandOptions.readPreference = readPreference;\n  }\n  if (cursorState.session) {\n    commandOptions.session = cursorState.session;\n  }\n  command(server, ns, findCmd, commandOptions, callback);\n}\nfunction prepareFindCommand(server, ns, cmd, cursorState) {\n  cursorState.batchSize = cmd.batchSize || cursorState.batchSize;\n  const findCmd = {\n    find: collectionNamespace(ns)\n  };\n  if (cmd.query) {\n    if (cmd.query['$query']) {\n      findCmd.filter = cmd.query['$query'];\n    } else {\n      findCmd.filter = cmd.query;\n    }\n  }\n  let sortValue = cmd.sort;\n  if (Array.isArray(sortValue)) {\n    const sortObject = {};\n    if (sortValue.length > 0 && !Array.isArray(sortValue[0])) {\n      let sortDirection = sortValue[1];\n      if (sortDirection === 'asc') {\n        sortDirection = 1;\n      } else if (sortDirection === 'desc') {\n        sortDirection = -1;\n      }\n      sortObject[sortValue[0]] = sortDirection;\n    } else {\n      for (let i = 0; i < sortValue.length; i++) {\n        let sortDirection = sortValue[i][1];\n        if (sortDirection === 'asc') {\n          sortDirection = 1;\n        } else if (sortDirection === 'desc') {\n          sortDirection = -1;\n        }\n        sortObject[sortValue[i][0]] = sortDirection;\n      }\n    }\n    sortValue = sortObject;\n  }\n  if (typeof cmd.allowDiskUse === 'boolean') {\n    findCmd.allowDiskUse = cmd.allowDiskUse;\n  }\n  if (cmd.sort) findCmd.sort = sortValue;\n  if (cmd.fields) findCmd.projection = cmd.fields;\n  if (cmd.hint) findCmd.hint = cmd.hint;\n  if (cmd.skip) findCmd.skip = cmd.skip;\n  if (cmd.limit) findCmd.limit = cmd.limit;\n  if (cmd.limit < 0) {\n    findCmd.limit = Math.abs(cmd.limit);\n    findCmd.singleBatch = true;\n  }\n  if (typeof cmd.batchSize === 'number') {\n    if (cmd.batchSize < 0) {\n      if (cmd.limit !== 0 && Math.abs(cmd.batchSize) < Math.abs(cmd.limit)) {\n        findCmd.limit = Math.abs(cmd.batchSize);\n      }\n      findCmd.singleBatch = true;\n    }\n    findCmd.batchSize = Math.abs(cmd.batchSize);\n  }\n  if (cmd.comment) findCmd.comment = cmd.comment;\n  if (cmd.maxScan) findCmd.maxScan = cmd.maxScan;\n  if (cmd.maxTimeMS) findCmd.maxTimeMS = cmd.maxTimeMS;\n  if (cmd.min) findCmd.min = cmd.min;\n  if (cmd.max) findCmd.max = cmd.max;\n  findCmd.returnKey = cmd.returnKey ? cmd.returnKey : false;\n  findCmd.showRecordId = cmd.showDiskLoc ? cmd.showDiskLoc : false;\n  if (cmd.snapshot) findCmd.snapshot = cmd.snapshot;\n  if (cmd.tailable) findCmd.tailable = cmd.tailable;\n  if (cmd.oplogReplay) findCmd.oplogReplay = cmd.oplogReplay;\n  if (cmd.noCursorTimeout) findCmd.noCursorTimeout = cmd.noCursorTimeout;\n  if (cmd.awaitData) findCmd.awaitData = cmd.awaitData;\n  if (cmd.awaitdata) findCmd.awaitData = cmd.awaitdata;\n  if (cmd.partial) findCmd.partial = cmd.partial;\n  if (cmd.collation) findCmd.collation = cmd.collation;\n  if (cmd.readConcern) findCmd.readConcern = cmd.readConcern;\n  return findCmd;\n}\nfunction prepareLegacyFindQuery(server, ns, cmd, cursorState, options) {\n  options = options || {};\n  const bson = server.s.bson;\n  const readPreference = getReadPreference(cmd, options);\n  cursorState.batchSize = cmd.batchSize || cursorState.batchSize;\n  let numberToReturn = 0;\n  if (cursorState.limit < 0 || cursorState.limit !== 0 && cursorState.limit < cursorState.batchSize || cursorState.limit > 0 && cursorState.batchSize === 0) {\n    numberToReturn = cursorState.limit;\n  } else {\n    numberToReturn = cursorState.batchSize;\n  }\n  const numberToSkip = cursorState.skip || 0;\n  const findCmd = {};\n  if (isSharded(server) && readPreference) {\n    findCmd['$readPreference'] = readPreference.toJSON();\n  }\n  if (cmd.sort) findCmd['$orderby'] = cmd.sort;\n  if (cmd.hint) findCmd['$hint'] = cmd.hint;\n  if (cmd.snapshot) findCmd['$snapshot'] = cmd.snapshot;\n  if (typeof cmd.returnKey !== 'undefined') findCmd['$returnKey'] = cmd.returnKey;\n  if (cmd.maxScan) findCmd['$maxScan'] = cmd.maxScan;\n  if (cmd.min) findCmd['$min'] = cmd.min;\n  if (cmd.max) findCmd['$max'] = cmd.max;\n  if (typeof cmd.showDiskLoc !== 'undefined') findCmd['$showDiskLoc'] = cmd.showDiskLoc;\n  if (cmd.comment) findCmd['$comment'] = cmd.comment;\n  if (cmd.maxTimeMS) findCmd['$maxTimeMS'] = cmd.maxTimeMS;\n  if (options.explain !== undefined) {\n    // nToReturn must be 0 (match all) or negative (match N and close cursor)\n    // nToReturn > 0 will give explain results equivalent to limit(0)\n    numberToReturn = -Math.abs(cmd.limit || 0);\n    findCmd['$explain'] = true;\n  }\n  findCmd['$query'] = cmd.query;\n  if (cmd.readConcern && cmd.readConcern.level !== 'local') {\n    throw new MongoError(`server find command does not support a readConcern level of ${cmd.readConcern.level}`);\n  }\n  if (cmd.readConcern) {\n    cmd = Object.assign({}, cmd);\n    delete cmd['readConcern'];\n  }\n  const serializeFunctions = typeof options.serializeFunctions === 'boolean' ? options.serializeFunctions : false;\n  const ignoreUndefined = typeof options.ignoreUndefined === 'boolean' ? options.ignoreUndefined : false;\n  const query = new Query(bson, ns, findCmd, {\n    numberToSkip: numberToSkip,\n    numberToReturn: numberToReturn,\n    pre32Limit: typeof cmd.limit !== 'undefined' ? cmd.limit : undefined,\n    checkKeys: false,\n    returnFieldSelector: cmd.fields,\n    serializeFunctions: serializeFunctions,\n    ignoreUndefined: ignoreUndefined\n  });\n  if (typeof cmd.tailable === 'boolean') query.tailable = cmd.tailable;\n  if (typeof cmd.oplogReplay === 'boolean') query.oplogReplay = cmd.oplogReplay;\n  if (typeof cmd.noCursorTimeout === 'boolean') query.noCursorTimeout = cmd.noCursorTimeout;\n  if (typeof cmd.awaitData === 'boolean') query.awaitData = cmd.awaitData;\n  if (typeof cmd.partial === 'boolean') query.partial = cmd.partial;\n  query.slaveOk = readPreference.slaveOk();\n  return query;\n}\nmodule.exports = query;","map":{"version":3,"names":["Query","require","MongoError","getReadPreference","collectionNamespace","isSharded","maxWireVersion","applyCommonQueryOptions","command","decorateWithExplain","Explain","query","server","ns","cmd","cursorState","options","callback","cursorId","JSON","stringify","prepareLegacyFindQuery","queryOptions","documentsReturnedIn","s","pool","write","readPreference","findCmd","prepareFindCommand","explain","fromOptions","virtual","commandOptions","Object","assign","numberToReturn","slaveOk","session","batchSize","find","filter","sortValue","sort","Array","isArray","sortObject","length","sortDirection","i","allowDiskUse","fields","projection","hint","skip","limit","Math","abs","singleBatch","comment","maxScan","maxTimeMS","min","max","returnKey","showRecordId","showDiskLoc","snapshot","tailable","oplogReplay","noCursorTimeout","awaitData","awaitdata","partial","collation","readConcern","bson","numberToSkip","toJSON","undefined","level","serializeFunctions","ignoreUndefined","pre32Limit","checkKeys","returnFieldSelector","module","exports"],"sources":["C:/Users/minix/Documents/GitHub/digital-portfolio-projects/digital-portfolio-projects/node_modules/mongodb/lib/core/wireprotocol/query.js"],"sourcesContent":["'use strict';\n\nconst Query = require('../connection/commands').Query;\nconst MongoError = require('../error').MongoError;\nconst getReadPreference = require('./shared').getReadPreference;\nconst collectionNamespace = require('./shared').collectionNamespace;\nconst isSharded = require('./shared').isSharded;\nconst maxWireVersion = require('../utils').maxWireVersion;\nconst applyCommonQueryOptions = require('./shared').applyCommonQueryOptions;\nconst command = require('./command');\nconst decorateWithExplain = require('../../utils').decorateWithExplain;\nconst Explain = require('../../explain').Explain;\n\nfunction query(server, ns, cmd, cursorState, options, callback) {\n  options = options || {};\n  if (cursorState.cursorId != null) {\n    return callback();\n  }\n\n  if (cmd == null) {\n    return callback(new MongoError(`command ${JSON.stringify(cmd)} does not return a cursor`));\n  }\n\n  if (maxWireVersion(server) < 4) {\n    const query = prepareLegacyFindQuery(server, ns, cmd, cursorState, options);\n    const queryOptions = applyCommonQueryOptions({}, cursorState);\n    if (typeof query.documentsReturnedIn === 'string') {\n      queryOptions.documentsReturnedIn = query.documentsReturnedIn;\n    }\n\n    server.s.pool.write(query, queryOptions, callback);\n    return;\n  }\n\n  const readPreference = getReadPreference(cmd, options);\n  let findCmd = prepareFindCommand(server, ns, cmd, cursorState, options);\n\n  // If we have explain, we need to rewrite the find command\n  // to wrap it in the explain command\n  const explain = Explain.fromOptions(options);\n  if (explain) {\n    findCmd = decorateWithExplain(findCmd, explain);\n  }\n\n  // NOTE: This actually modifies the passed in cmd, and our code _depends_ on this\n  //       side-effect. Change this ASAP\n  cmd.virtual = false;\n\n  const commandOptions = Object.assign(\n    {\n      documentsReturnedIn: 'firstBatch',\n      numberToReturn: 1,\n      slaveOk: readPreference.slaveOk()\n    },\n    options\n  );\n\n  if (cmd.readPreference) {\n    commandOptions.readPreference = readPreference;\n  }\n\n  if (cursorState.session) {\n    commandOptions.session = cursorState.session;\n  }\n\n  command(server, ns, findCmd, commandOptions, callback);\n}\n\nfunction prepareFindCommand(server, ns, cmd, cursorState) {\n  cursorState.batchSize = cmd.batchSize || cursorState.batchSize;\n  const findCmd = {\n    find: collectionNamespace(ns)\n  };\n\n  if (cmd.query) {\n    if (cmd.query['$query']) {\n      findCmd.filter = cmd.query['$query'];\n    } else {\n      findCmd.filter = cmd.query;\n    }\n  }\n\n  let sortValue = cmd.sort;\n  if (Array.isArray(sortValue)) {\n    const sortObject = {};\n\n    if (sortValue.length > 0 && !Array.isArray(sortValue[0])) {\n      let sortDirection = sortValue[1];\n      if (sortDirection === 'asc') {\n        sortDirection = 1;\n      } else if (sortDirection === 'desc') {\n        sortDirection = -1;\n      }\n\n      sortObject[sortValue[0]] = sortDirection;\n    } else {\n      for (let i = 0; i < sortValue.length; i++) {\n        let sortDirection = sortValue[i][1];\n        if (sortDirection === 'asc') {\n          sortDirection = 1;\n        } else if (sortDirection === 'desc') {\n          sortDirection = -1;\n        }\n\n        sortObject[sortValue[i][0]] = sortDirection;\n      }\n    }\n\n    sortValue = sortObject;\n  }\n\n  if (typeof cmd.allowDiskUse === 'boolean') {\n    findCmd.allowDiskUse = cmd.allowDiskUse;\n  }\n\n  if (cmd.sort) findCmd.sort = sortValue;\n  if (cmd.fields) findCmd.projection = cmd.fields;\n  if (cmd.hint) findCmd.hint = cmd.hint;\n  if (cmd.skip) findCmd.skip = cmd.skip;\n  if (cmd.limit) findCmd.limit = cmd.limit;\n  if (cmd.limit < 0) {\n    findCmd.limit = Math.abs(cmd.limit);\n    findCmd.singleBatch = true;\n  }\n\n  if (typeof cmd.batchSize === 'number') {\n    if (cmd.batchSize < 0) {\n      if (cmd.limit !== 0 && Math.abs(cmd.batchSize) < Math.abs(cmd.limit)) {\n        findCmd.limit = Math.abs(cmd.batchSize);\n      }\n\n      findCmd.singleBatch = true;\n    }\n\n    findCmd.batchSize = Math.abs(cmd.batchSize);\n  }\n\n  if (cmd.comment) findCmd.comment = cmd.comment;\n  if (cmd.maxScan) findCmd.maxScan = cmd.maxScan;\n  if (cmd.maxTimeMS) findCmd.maxTimeMS = cmd.maxTimeMS;\n  if (cmd.min) findCmd.min = cmd.min;\n  if (cmd.max) findCmd.max = cmd.max;\n  findCmd.returnKey = cmd.returnKey ? cmd.returnKey : false;\n  findCmd.showRecordId = cmd.showDiskLoc ? cmd.showDiskLoc : false;\n  if (cmd.snapshot) findCmd.snapshot = cmd.snapshot;\n  if (cmd.tailable) findCmd.tailable = cmd.tailable;\n  if (cmd.oplogReplay) findCmd.oplogReplay = cmd.oplogReplay;\n  if (cmd.noCursorTimeout) findCmd.noCursorTimeout = cmd.noCursorTimeout;\n  if (cmd.awaitData) findCmd.awaitData = cmd.awaitData;\n  if (cmd.awaitdata) findCmd.awaitData = cmd.awaitdata;\n  if (cmd.partial) findCmd.partial = cmd.partial;\n  if (cmd.collation) findCmd.collation = cmd.collation;\n  if (cmd.readConcern) findCmd.readConcern = cmd.readConcern;\n\n  return findCmd;\n}\n\nfunction prepareLegacyFindQuery(server, ns, cmd, cursorState, options) {\n  options = options || {};\n  const bson = server.s.bson;\n  const readPreference = getReadPreference(cmd, options);\n  cursorState.batchSize = cmd.batchSize || cursorState.batchSize;\n\n  let numberToReturn = 0;\n  if (\n    cursorState.limit < 0 ||\n    (cursorState.limit !== 0 && cursorState.limit < cursorState.batchSize) ||\n    (cursorState.limit > 0 && cursorState.batchSize === 0)\n  ) {\n    numberToReturn = cursorState.limit;\n  } else {\n    numberToReturn = cursorState.batchSize;\n  }\n\n  const numberToSkip = cursorState.skip || 0;\n\n  const findCmd = {};\n  if (isSharded(server) && readPreference) {\n    findCmd['$readPreference'] = readPreference.toJSON();\n  }\n\n  if (cmd.sort) findCmd['$orderby'] = cmd.sort;\n  if (cmd.hint) findCmd['$hint'] = cmd.hint;\n  if (cmd.snapshot) findCmd['$snapshot'] = cmd.snapshot;\n  if (typeof cmd.returnKey !== 'undefined') findCmd['$returnKey'] = cmd.returnKey;\n  if (cmd.maxScan) findCmd['$maxScan'] = cmd.maxScan;\n  if (cmd.min) findCmd['$min'] = cmd.min;\n  if (cmd.max) findCmd['$max'] = cmd.max;\n  if (typeof cmd.showDiskLoc !== 'undefined') findCmd['$showDiskLoc'] = cmd.showDiskLoc;\n  if (cmd.comment) findCmd['$comment'] = cmd.comment;\n  if (cmd.maxTimeMS) findCmd['$maxTimeMS'] = cmd.maxTimeMS;\n  if (options.explain !== undefined) {\n    // nToReturn must be 0 (match all) or negative (match N and close cursor)\n    // nToReturn > 0 will give explain results equivalent to limit(0)\n    numberToReturn = -Math.abs(cmd.limit || 0);\n    findCmd['$explain'] = true;\n  }\n\n  findCmd['$query'] = cmd.query;\n  if (cmd.readConcern && cmd.readConcern.level !== 'local') {\n    throw new MongoError(\n      `server find command does not support a readConcern level of ${cmd.readConcern.level}`\n    );\n  }\n\n  if (cmd.readConcern) {\n    cmd = Object.assign({}, cmd);\n    delete cmd['readConcern'];\n  }\n\n  const serializeFunctions =\n    typeof options.serializeFunctions === 'boolean' ? options.serializeFunctions : false;\n  const ignoreUndefined =\n    typeof options.ignoreUndefined === 'boolean' ? options.ignoreUndefined : false;\n\n  const query = new Query(bson, ns, findCmd, {\n    numberToSkip: numberToSkip,\n    numberToReturn: numberToReturn,\n    pre32Limit: typeof cmd.limit !== 'undefined' ? cmd.limit : undefined,\n    checkKeys: false,\n    returnFieldSelector: cmd.fields,\n    serializeFunctions: serializeFunctions,\n    ignoreUndefined: ignoreUndefined\n  });\n\n  if (typeof cmd.tailable === 'boolean') query.tailable = cmd.tailable;\n  if (typeof cmd.oplogReplay === 'boolean') query.oplogReplay = cmd.oplogReplay;\n  if (typeof cmd.noCursorTimeout === 'boolean') query.noCursorTimeout = cmd.noCursorTimeout;\n  if (typeof cmd.awaitData === 'boolean') query.awaitData = cmd.awaitData;\n  if (typeof cmd.partial === 'boolean') query.partial = cmd.partial;\n\n  query.slaveOk = readPreference.slaveOk();\n  return query;\n}\n\nmodule.exports = query;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}