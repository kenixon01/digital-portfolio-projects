{"ast":null,"code":"'use strict';\n\nconst Explain = require('../explain').Explain;\nconst MongoError = require('../core/error').MongoError;\nconst Aspect = {\n  READ_OPERATION: Symbol('READ_OPERATION'),\n  WRITE_OPERATION: Symbol('WRITE_OPERATION'),\n  RETRYABLE: Symbol('RETRYABLE'),\n  EXECUTE_WITH_SELECTION: Symbol('EXECUTE_WITH_SELECTION'),\n  NO_INHERIT_OPTIONS: Symbol('NO_INHERIT_OPTIONS'),\n  EXPLAINABLE: Symbol('EXPLAINABLE')\n};\n\n/**\n * This class acts as a parent class for any operation and is responsible for setting this.options,\n * as well as setting and getting a session.\n * Additionally, this class implements `hasAspect`, which determines whether an operation has\n * a specific aspect.\n */\nclass OperationBase {\n  constructor(options) {\n    this.options = Object.assign({}, options);\n    if (this.hasAspect(Aspect.EXPLAINABLE)) {\n      this.explain = Explain.fromOptions(options);\n    } else if (this.options.explain !== undefined) {\n      throw new MongoError(`explain is not supported on this command`);\n    }\n  }\n  hasAspect(aspect) {\n    if (this.constructor.aspects == null) {\n      return false;\n    }\n    return this.constructor.aspects.has(aspect);\n  }\n  set session(session) {\n    Object.assign(this.options, {\n      session\n    });\n  }\n  get session() {\n    return this.options.session;\n  }\n  clearSession() {\n    delete this.options.session;\n  }\n  get canRetryRead() {\n    return true;\n  }\n  execute() {\n    throw new TypeError('`execute` must be implemented for OperationBase subclasses');\n  }\n}\nfunction defineAspects(operation, aspects) {\n  if (!Array.isArray(aspects) && !(aspects instanceof Set)) {\n    aspects = [aspects];\n  }\n  aspects = new Set(aspects);\n  Object.defineProperty(operation, 'aspects', {\n    value: aspects,\n    writable: false\n  });\n  return aspects;\n}\nmodule.exports = {\n  Aspect,\n  defineAspects,\n  OperationBase\n};","map":{"version":3,"names":["Explain","require","MongoError","Aspect","READ_OPERATION","Symbol","WRITE_OPERATION","RETRYABLE","EXECUTE_WITH_SELECTION","NO_INHERIT_OPTIONS","EXPLAINABLE","OperationBase","constructor","options","Object","assign","hasAspect","explain","fromOptions","undefined","aspect","aspects","has","session","clearSession","canRetryRead","execute","TypeError","defineAspects","operation","Array","isArray","Set","defineProperty","value","writable","module","exports"],"sources":["C:/Users/minix/Documents/GitHub/digital-portfolio-projects/digital-portfolio-projects/node_modules/mongodb/lib/operations/operation.js"],"sourcesContent":["'use strict';\n\nconst Explain = require('../explain').Explain;\nconst MongoError = require('../core/error').MongoError;\n\nconst Aspect = {\n  READ_OPERATION: Symbol('READ_OPERATION'),\n  WRITE_OPERATION: Symbol('WRITE_OPERATION'),\n  RETRYABLE: Symbol('RETRYABLE'),\n  EXECUTE_WITH_SELECTION: Symbol('EXECUTE_WITH_SELECTION'),\n  NO_INHERIT_OPTIONS: Symbol('NO_INHERIT_OPTIONS'),\n  EXPLAINABLE: Symbol('EXPLAINABLE')\n};\n\n/**\n * This class acts as a parent class for any operation and is responsible for setting this.options,\n * as well as setting and getting a session.\n * Additionally, this class implements `hasAspect`, which determines whether an operation has\n * a specific aspect.\n */\nclass OperationBase {\n  constructor(options) {\n    this.options = Object.assign({}, options);\n\n    if (this.hasAspect(Aspect.EXPLAINABLE)) {\n      this.explain = Explain.fromOptions(options);\n    } else if (this.options.explain !== undefined) {\n      throw new MongoError(`explain is not supported on this command`);\n    }\n  }\n\n  hasAspect(aspect) {\n    if (this.constructor.aspects == null) {\n      return false;\n    }\n    return this.constructor.aspects.has(aspect);\n  }\n\n  set session(session) {\n    Object.assign(this.options, { session });\n  }\n\n  get session() {\n    return this.options.session;\n  }\n\n  clearSession() {\n    delete this.options.session;\n  }\n\n  get canRetryRead() {\n    return true;\n  }\n\n  execute() {\n    throw new TypeError('`execute` must be implemented for OperationBase subclasses');\n  }\n}\n\nfunction defineAspects(operation, aspects) {\n  if (!Array.isArray(aspects) && !(aspects instanceof Set)) {\n    aspects = [aspects];\n  }\n  aspects = new Set(aspects);\n  Object.defineProperty(operation, 'aspects', {\n    value: aspects,\n    writable: false\n  });\n  return aspects;\n}\n\nmodule.exports = {\n  Aspect,\n  defineAspects,\n  OperationBase\n};\n"],"mappings":"AAAA,YAAY;;AAEZ,MAAMA,OAAO,GAAGC,OAAO,CAAC,YAAY,CAAC,CAACD,OAAO;AAC7C,MAAME,UAAU,GAAGD,OAAO,CAAC,eAAe,CAAC,CAACC,UAAU;AAEtD,MAAMC,MAAM,GAAG;EACbC,cAAc,EAAEC,MAAM,CAAC,gBAAgB,CAAC;EACxCC,eAAe,EAAED,MAAM,CAAC,iBAAiB,CAAC;EAC1CE,SAAS,EAAEF,MAAM,CAAC,WAAW,CAAC;EAC9BG,sBAAsB,EAAEH,MAAM,CAAC,wBAAwB,CAAC;EACxDI,kBAAkB,EAAEJ,MAAM,CAAC,oBAAoB,CAAC;EAChDK,WAAW,EAAEL,MAAM,CAAC,aAAa;AACnC,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA,MAAMM,aAAa,CAAC;EAClBC,WAAW,CAACC,OAAO,EAAE;IACnB,IAAI,CAACA,OAAO,GAAGC,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAEF,OAAO,CAAC;IAEzC,IAAI,IAAI,CAACG,SAAS,CAACb,MAAM,CAACO,WAAW,CAAC,EAAE;MACtC,IAAI,CAACO,OAAO,GAAGjB,OAAO,CAACkB,WAAW,CAACL,OAAO,CAAC;IAC7C,CAAC,MAAM,IAAI,IAAI,CAACA,OAAO,CAACI,OAAO,KAAKE,SAAS,EAAE;MAC7C,MAAM,IAAIjB,UAAU,CAAE,0CAAyC,CAAC;IAClE;EACF;EAEAc,SAAS,CAACI,MAAM,EAAE;IAChB,IAAI,IAAI,CAACR,WAAW,CAACS,OAAO,IAAI,IAAI,EAAE;MACpC,OAAO,KAAK;IACd;IACA,OAAO,IAAI,CAACT,WAAW,CAACS,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC;EAC7C;EAEA,IAAIG,OAAO,CAACA,OAAO,EAAE;IACnBT,MAAM,CAACC,MAAM,CAAC,IAAI,CAACF,OAAO,EAAE;MAAEU;IAAQ,CAAC,CAAC;EAC1C;EAEA,IAAIA,OAAO,GAAG;IACZ,OAAO,IAAI,CAACV,OAAO,CAACU,OAAO;EAC7B;EAEAC,YAAY,GAAG;IACb,OAAO,IAAI,CAACX,OAAO,CAACU,OAAO;EAC7B;EAEA,IAAIE,YAAY,GAAG;IACjB,OAAO,IAAI;EACb;EAEAC,OAAO,GAAG;IACR,MAAM,IAAIC,SAAS,CAAC,4DAA4D,CAAC;EACnF;AACF;AAEA,SAASC,aAAa,CAACC,SAAS,EAAER,OAAO,EAAE;EACzC,IAAI,CAACS,KAAK,CAACC,OAAO,CAACV,OAAO,CAAC,IAAI,EAAEA,OAAO,YAAYW,GAAG,CAAC,EAAE;IACxDX,OAAO,GAAG,CAACA,OAAO,CAAC;EACrB;EACAA,OAAO,GAAG,IAAIW,GAAG,CAACX,OAAO,CAAC;EAC1BP,MAAM,CAACmB,cAAc,CAACJ,SAAS,EAAE,SAAS,EAAE;IAC1CK,KAAK,EAAEb,OAAO;IACdc,QAAQ,EAAE;EACZ,CAAC,CAAC;EACF,OAAOd,OAAO;AAChB;AAEAe,MAAM,CAACC,OAAO,GAAG;EACflC,MAAM;EACNyB,aAAa;EACbjB;AACF,CAAC"},"metadata":{},"sourceType":"script"}