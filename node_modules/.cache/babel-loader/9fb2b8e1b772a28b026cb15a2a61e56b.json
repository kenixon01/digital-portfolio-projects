{"ast":null,"code":"/**\n * A class representation of the BSON Code type.\n *\n * @class\n * @param {(string|function)} code a string or function.\n * @param {Object} [scope] an optional scope for the function.\n * @return {Code}\n */\nvar Code = function Code(code, scope) {\n  if (!(this instanceof Code)) return new Code(code, scope);\n  this._bsontype = 'Code';\n  this.code = code;\n  this.scope = scope;\n};\n\n/**\n * @ignore\n */\nCode.prototype.toJSON = function () {\n  return {\n    scope: this.scope,\n    code: this.code\n  };\n};\nmodule.exports = Code;\nmodule.exports.Code = Code;","map":{"version":3,"names":["Code","code","scope","_bsontype","prototype","toJSON","module","exports"],"sources":["C:/Users/minix/Documents/GitHub/digital-portfolio-projects/digital-portfolio-projects/node_modules/bson/lib/bson/code.js"],"sourcesContent":["/**\n * A class representation of the BSON Code type.\n *\n * @class\n * @param {(string|function)} code a string or function.\n * @param {Object} [scope] an optional scope for the function.\n * @return {Code}\n */\nvar Code = function Code(code, scope) {\n  if (!(this instanceof Code)) return new Code(code, scope);\n  this._bsontype = 'Code';\n  this.code = code;\n  this.scope = scope;\n};\n\n/**\n * @ignore\n */\nCode.prototype.toJSON = function() {\n  return { scope: this.scope, code: this.code };\n};\n\nmodule.exports = Code;\nmodule.exports.Code = Code;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIA,IAAI,GAAG,SAASA,IAAI,CAACC,IAAI,EAAEC,KAAK,EAAE;EACpC,IAAI,EAAE,IAAI,YAAYF,IAAI,CAAC,EAAE,OAAO,IAAIA,IAAI,CAACC,IAAI,EAAEC,KAAK,CAAC;EACzD,IAAI,CAACC,SAAS,GAAG,MAAM;EACvB,IAAI,CAACF,IAAI,GAAGA,IAAI;EAChB,IAAI,CAACC,KAAK,GAAGA,KAAK;AACpB,CAAC;;AAED;AACA;AACA;AACAF,IAAI,CAACI,SAAS,CAACC,MAAM,GAAG,YAAW;EACjC,OAAO;IAAEH,KAAK,EAAE,IAAI,CAACA,KAAK;IAAED,IAAI,EAAE,IAAI,CAACA;EAAK,CAAC;AAC/C,CAAC;AAEDK,MAAM,CAACC,OAAO,GAAGP,IAAI;AACrBM,MAAM,CAACC,OAAO,CAACP,IAAI,GAAGA,IAAI"},"metadata":{},"sourceType":"script"}