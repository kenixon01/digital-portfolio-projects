{"ast":null,"code":"'use strict';\n\nconst parsePackageVersion = require('../../utils').parsePackageVersion;\nconst MongoError = require('../error').MongoError;\nconst require_optional = require('optional-require')(require);\nfunction debugOptions(debugFields, options) {\n  const finaloptions = {};\n  debugFields.forEach(function (n) {\n    finaloptions[n] = options[n];\n  });\n  return finaloptions;\n}\nfunction retrieveBSON() {\n  const BSON = require('bson');\n  BSON.native = false;\n  const optionalBSON = require_optional('bson-ext');\n  const bsonExtVersion = parsePackageVersion(require_optional('bson-ext/package.json') || {\n    version: '0.0.0'\n  });\n  if (optionalBSON) {\n    if (bsonExtVersion.major >= 4) {\n      throw new MongoError('bson-ext version 4 and above does not work with the 3.x version of the mongodb driver');\n    }\n    optionalBSON.native = true;\n    return optionalBSON;\n  }\n  return BSON;\n}\n\n// Throw an error if an attempt to use Snappy is made when Snappy is not installed\nfunction noSnappyWarning() {\n  throw new Error('Attempted to use Snappy compression, but Snappy is not installed. Install or disable Snappy compression and try again.');\n}\nconst PKG_VERSION = Symbol('kPkgVersion');\n\n// Facilitate loading Snappy optionally\nfunction retrieveSnappy() {\n  const snappy = require_optional('snappy');\n  if (!snappy) {\n    return {\n      compress: noSnappyWarning,\n      uncompress: noSnappyWarning,\n      compressSync: noSnappyWarning,\n      uncompressSync: noSnappyWarning\n    };\n  }\n  const snappyPkg = require_optional('snappy/package.json') || {\n    version: '0.0.0'\n  };\n  const version = parsePackageVersion(snappyPkg);\n  snappy[PKG_VERSION] = version;\n  if (version.major >= 7) {\n    const compressOriginal = snappy.compress;\n    const uncompressOriginal = snappy.uncompress;\n    snappy.compress = (data, callback) => {\n      compressOriginal(data).then(res => callback(undefined, res)).catch(error => callback(error));\n    };\n    snappy.uncompress = (data, callback) => {\n      uncompressOriginal(data).then(res => callback(undefined, res)).catch(error => callback(error));\n    };\n  }\n  return snappy;\n}\nmodule.exports = {\n  PKG_VERSION,\n  debugOptions,\n  retrieveBSON,\n  retrieveSnappy\n};","map":{"version":3,"names":["parsePackageVersion","require","MongoError","require_optional","debugOptions","debugFields","options","finaloptions","forEach","n","retrieveBSON","BSON","native","optionalBSON","bsonExtVersion","version","major","noSnappyWarning","Error","PKG_VERSION","Symbol","retrieveSnappy","snappy","compress","uncompress","compressSync","uncompressSync","snappyPkg","compressOriginal","uncompressOriginal","data","callback","then","res","undefined","catch","error","module","exports"],"sources":["C:/Users/minix/Documents/GitHub/digital-portfolio-projects/digital-portfolio-projects/node_modules/mongodb/lib/core/connection/utils.js"],"sourcesContent":["'use strict';\n\nconst parsePackageVersion = require('../../utils').parsePackageVersion;\nconst MongoError = require('../error').MongoError;\n\nconst require_optional = require('optional-require')(require);\n\nfunction debugOptions(debugFields, options) {\n  const finaloptions = {};\n  debugFields.forEach(function(n) {\n    finaloptions[n] = options[n];\n  });\n\n  return finaloptions;\n}\n\nfunction retrieveBSON() {\n  const BSON = require('bson');\n  BSON.native = false;\n\n  const optionalBSON = require_optional('bson-ext');\n  const bsonExtVersion = parsePackageVersion(\n    require_optional('bson-ext/package.json') || { version: '0.0.0' }\n  );\n  if (optionalBSON) {\n    if (bsonExtVersion.major >= 4) {\n      throw new MongoError(\n        'bson-ext version 4 and above does not work with the 3.x version of the mongodb driver'\n      );\n    }\n    optionalBSON.native = true;\n    return optionalBSON;\n  }\n\n  return BSON;\n}\n\n// Throw an error if an attempt to use Snappy is made when Snappy is not installed\nfunction noSnappyWarning() {\n  throw new Error(\n    'Attempted to use Snappy compression, but Snappy is not installed. Install or disable Snappy compression and try again.'\n  );\n}\n\nconst PKG_VERSION = Symbol('kPkgVersion');\n\n// Facilitate loading Snappy optionally\nfunction retrieveSnappy() {\n  const snappy = require_optional('snappy');\n  if (!snappy) {\n    return {\n      compress: noSnappyWarning,\n      uncompress: noSnappyWarning,\n      compressSync: noSnappyWarning,\n      uncompressSync: noSnappyWarning\n    };\n  }\n\n  const snappyPkg = require_optional('snappy/package.json') || { version: '0.0.0' };\n  const version = parsePackageVersion(snappyPkg);\n  snappy[PKG_VERSION] = version;\n  if (version.major >= 7) {\n    const compressOriginal = snappy.compress;\n    const uncompressOriginal = snappy.uncompress;\n    snappy.compress = (data, callback) => {\n      compressOriginal(data)\n        .then(res => callback(undefined, res))\n        .catch(error => callback(error));\n    };\n    snappy.uncompress = (data, callback) => {\n      uncompressOriginal(data)\n        .then(res => callback(undefined, res))\n        .catch(error => callback(error));\n    };\n  }\n\n  return snappy;\n}\n\nmodule.exports = {\n  PKG_VERSION,\n  debugOptions,\n  retrieveBSON,\n  retrieveSnappy\n};\n"],"mappings":"AAAA,YAAY;;AAEZ,MAAMA,mBAAmB,GAAGC,OAAO,CAAC,aAAa,CAAC,CAACD,mBAAmB;AACtE,MAAME,UAAU,GAAGD,OAAO,CAAC,UAAU,CAAC,CAACC,UAAU;AAEjD,MAAMC,gBAAgB,GAAGF,OAAO,CAAC,kBAAkB,CAAC,CAACA,OAAO,CAAC;AAE7D,SAASG,YAAY,CAACC,WAAW,EAAEC,OAAO,EAAE;EAC1C,MAAMC,YAAY,GAAG,CAAC,CAAC;EACvBF,WAAW,CAACG,OAAO,CAAC,UAASC,CAAC,EAAE;IAC9BF,YAAY,CAACE,CAAC,CAAC,GAAGH,OAAO,CAACG,CAAC,CAAC;EAC9B,CAAC,CAAC;EAEF,OAAOF,YAAY;AACrB;AAEA,SAASG,YAAY,GAAG;EACtB,MAAMC,IAAI,GAAGV,OAAO,CAAC,MAAM,CAAC;EAC5BU,IAAI,CAACC,MAAM,GAAG,KAAK;EAEnB,MAAMC,YAAY,GAAGV,gBAAgB,CAAC,UAAU,CAAC;EACjD,MAAMW,cAAc,GAAGd,mBAAmB,CACxCG,gBAAgB,CAAC,uBAAuB,CAAC,IAAI;IAAEY,OAAO,EAAE;EAAQ,CAAC,CAClE;EACD,IAAIF,YAAY,EAAE;IAChB,IAAIC,cAAc,CAACE,KAAK,IAAI,CAAC,EAAE;MAC7B,MAAM,IAAId,UAAU,CAClB,uFAAuF,CACxF;IACH;IACAW,YAAY,CAACD,MAAM,GAAG,IAAI;IAC1B,OAAOC,YAAY;EACrB;EAEA,OAAOF,IAAI;AACb;;AAEA;AACA,SAASM,eAAe,GAAG;EACzB,MAAM,IAAIC,KAAK,CACb,wHAAwH,CACzH;AACH;AAEA,MAAMC,WAAW,GAAGC,MAAM,CAAC,aAAa,CAAC;;AAEzC;AACA,SAASC,cAAc,GAAG;EACxB,MAAMC,MAAM,GAAGnB,gBAAgB,CAAC,QAAQ,CAAC;EACzC,IAAI,CAACmB,MAAM,EAAE;IACX,OAAO;MACLC,QAAQ,EAAEN,eAAe;MACzBO,UAAU,EAAEP,eAAe;MAC3BQ,YAAY,EAAER,eAAe;MAC7BS,cAAc,EAAET;IAClB,CAAC;EACH;EAEA,MAAMU,SAAS,GAAGxB,gBAAgB,CAAC,qBAAqB,CAAC,IAAI;IAAEY,OAAO,EAAE;EAAQ,CAAC;EACjF,MAAMA,OAAO,GAAGf,mBAAmB,CAAC2B,SAAS,CAAC;EAC9CL,MAAM,CAACH,WAAW,CAAC,GAAGJ,OAAO;EAC7B,IAAIA,OAAO,CAACC,KAAK,IAAI,CAAC,EAAE;IACtB,MAAMY,gBAAgB,GAAGN,MAAM,CAACC,QAAQ;IACxC,MAAMM,kBAAkB,GAAGP,MAAM,CAACE,UAAU;IAC5CF,MAAM,CAACC,QAAQ,GAAG,CAACO,IAAI,EAAEC,QAAQ,KAAK;MACpCH,gBAAgB,CAACE,IAAI,CAAC,CACnBE,IAAI,CAACC,GAAG,IAAIF,QAAQ,CAACG,SAAS,EAAED,GAAG,CAAC,CAAC,CACrCE,KAAK,CAACC,KAAK,IAAIL,QAAQ,CAACK,KAAK,CAAC,CAAC;IACpC,CAAC;IACDd,MAAM,CAACE,UAAU,GAAG,CAACM,IAAI,EAAEC,QAAQ,KAAK;MACtCF,kBAAkB,CAACC,IAAI,CAAC,CACrBE,IAAI,CAACC,GAAG,IAAIF,QAAQ,CAACG,SAAS,EAAED,GAAG,CAAC,CAAC,CACrCE,KAAK,CAACC,KAAK,IAAIL,QAAQ,CAACK,KAAK,CAAC,CAAC;IACpC,CAAC;EACH;EAEA,OAAOd,MAAM;AACf;AAEAe,MAAM,CAACC,OAAO,GAAG;EACfnB,WAAW;EACXf,YAAY;EACZM,YAAY;EACZW;AACF,CAAC"},"metadata":{},"sourceType":"script"}